{"version":3,"file":"static/js/608.1c776821.chunk.js","mappings":"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","sources":["../node_modules/@project-serum/sol-wallet-adapter/src/index.ts","../node_modules/@project-serum/sol-wallet-adapter/node_modules/bs58/index.js"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\ntype InjectedProvider = { postMessage: (params: unknown) => void };\n\nexport default class Wallet extends EventEmitter {\n  private _providerUrl: URL | undefined;\n  private _injectedProvider?: InjectedProvider;\n  private _publicKey: PublicKey | null = null;\n  private _popup: Window | null = null;\n  private _handlerAdded = false;\n  private _nextRequestId = 1;\n  private _autoApprove = false;\n  private _responsePromises: Map<\n    number,\n    [(value: string) => void, (reason: Error) => void]\n  > = new Map();\n\n  constructor(provider: unknown, private _network: string) {\n    super();\n    if (isInjectedProvider(provider)) {\n      this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      this._providerUrl = new URL(provider);\n      this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: this._network,\n      }).toString();\n    } else {\n      throw new Error(\n        'provider parameter must be an injected provider or a URL string.',\n      );\n    }\n  }\n\n  handleMessage = (\n    e: MessageEvent<{\n      id: number;\n      method: string;\n      params: {\n        autoApprove: boolean;\n        publicKey: string;\n      };\n      result?: string;\n      error?: string;\n    }>,\n  ): void => {\n    if (\n      (this._injectedProvider && e.source === window) ||\n      (e.origin === this._providerUrl?.origin && e.source === this._popup)\n    ) {\n      if (e.data.method === 'connected') {\n        const newPublicKey = new PublicKey(e.data.params.publicKey);\n        if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n          if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n            this.handleDisconnect();\n          }\n          this._publicKey = newPublicKey;\n          this._autoApprove = !!e.data.params.autoApprove;\n          this.emit('connect', this._publicKey);\n        }\n      } else if (e.data.method === 'disconnected') {\n        this.handleDisconnect();\n      } else if (e.data.result || e.data.error) {\n        const promises = this._responsePromises.get(e.data.id);\n        if (promises) {\n          const [resolve, reject] = promises;\n          if (e.data.result) {\n            resolve(e.data.result);\n          } else {\n            reject(new Error(e.data.error));\n          }\n        }\n      }\n    }\n  };\n\n  private handleConnect() {\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this.handleMessage);\n      window.addEventListener('beforeunload', this._beforeUnload);\n    }\n    if (this._injectedProvider) {\n      return new Promise<void>((resolve) => {\n        void this.sendRequest('connect', {});\n        resolve();\n      });\n    } else {\n      window.name = 'parent';\n      this._popup = window.open(\n        this._providerUrl?.toString(),\n        '_blank',\n        'location,resizable,width=460,height=675',\n      );\n      return new Promise((resolve) => {\n        this.once('connect', resolve);\n      });\n    }\n  }\n\n  private handleDisconnect() {\n    if (this._handlerAdded) {\n      this._handlerAdded = false;\n      window.removeEventListener('message', this.handleMessage);\n      window.removeEventListener('beforeunload', this._beforeUnload);\n    }\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n    this._responsePromises.forEach(([, reject], id) => {\n      this._responsePromises.delete(id);\n      reject(new Error('Wallet disconnected'));\n    });\n  }\n\n  private async sendRequest(method: string, params: Record<string, unknown>) {\n    if (method !== 'connect' && !this.connected) {\n      throw new Error('Wallet not connected');\n    }\n    const requestId = this._nextRequestId;\n    ++this._nextRequestId;\n    return new Promise((resolve, reject) => {\n      this._responsePromises.set(requestId, [resolve, reject]);\n      if (this._injectedProvider) {\n        this._injectedProvider.postMessage({\n          jsonrpc: '2.0',\n          id: requestId,\n          method,\n          params: {\n            network: this._network,\n            ...params,\n          },\n        });\n      } else {\n        this._popup?.postMessage(\n          {\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params,\n          },\n          this._providerUrl?.origin ?? '',\n        );\n\n        if (!this.autoApprove) {\n          this._popup?.focus();\n        }\n      }\n    });\n  }\n\n  get publicKey(): PublicKey | null {\n    return this._publicKey;\n  }\n\n  get connected(): boolean {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove(): boolean {\n    return this._autoApprove;\n  }\n\n  async connect(): Promise<void> {\n    if (this._popup) {\n      this._popup.close();\n    }\n    await this.handleConnect();\n  }\n\n  async disconnect(): Promise<void> {\n    if (this._injectedProvider) {\n      await this.sendRequest('disconnect', {});\n    }\n    if (this._popup) {\n      this._popup.close();\n    }\n    this.handleDisconnect();\n  }\n\n  private _beforeUnload = (): void => {\n    void this.disconnect();\n  };\n\n  async sign(\n    data: Uint8Array,\n    display: unknown,\n  ): Promise<{\n    signature: Buffer;\n    publicKey: PublicKey;\n  }> {\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n\n    const response = (await this.sendRequest('sign', {\n      data,\n      display,\n    })) as { publicKey: string; signature: string };\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    return {\n      signature,\n      publicKey,\n    };\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response = (await this.sendRequest('signTransaction', {\n      message: bs58.encode(transaction.serializeMessage()),\n    })) as { publicKey: string; signature: string };\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    transaction.addSignature(publicKey, signature);\n    return transaction;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const response = (await this.sendRequest('signAllTransactions', {\n      messages: transactions.map((tx) => bs58.encode(tx.serializeMessage())),\n    })) as { publicKey: string; signatures: string[] };\n    const signatures = response.signatures.map((s) => bs58.decode(s));\n    const publicKey = new PublicKey(response.publicKey);\n    transactions = transactions.map((tx, idx) => {\n      tx.addSignature(publicKey, signatures[idx]);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async diffieHellman(\n    publicKey: Uint8Array,\n  ): Promise<{ publicKey: Uint8Array; secretKey: Uint8Array }> {\n    if (!(publicKey instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n    const response = (await this.sendRequest('diffieHellman', {\n      publicKey,\n    })) as {\n      publicKey: Uint8Array;\n      secretKey: Uint8Array;\n    };\n    return response;\n  }\n}\n\nfunction isString(a: unknown): a is string {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a: unknown): a is InjectedProvider {\n  return (\n    isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function'\n  );\n}\n\nfunction isObject(a: unknown): a is Record<string, unknown> {\n  return typeof a === 'object' && a !== null;\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n"],"names":["Wallet","_EventEmitter","_inherits","_super","_createSuper","provider","_network","_this","a","_classCallCheck","call","_publicKey","_popup","_handlerAdded","_nextRequestId","_autoApprove","_responsePromises","Map","handleMessage","e","_injectedProvider","source","window","origin","_a","_providerUrl","data","method","newPublicKey","PublicKey","params","publicKey","equals","handleDisconnect","autoApprove","emit","result","error","promises","get","id","_promises","_slicedToArray","resolve","reject","Error","_beforeUnload","disconnect","isObject","postMessage","isString","URL","hash","URLSearchParams","location","network","toString","_createClass","key","value","_this2","this","addEventListener","Promise","sendRequest","name","open","once","_this3","removeEventListener","forEach","_ref","delete","connected","_context","next","requestId","abrupt","_this4","set","jsonrpc","Object","assign","_c","_b","_d","focus","stop","_callee","close","_context2","handleConnect","_callee2","_context3","_callee3","display","Uint8Array","_context4","response","sent","signature","bs58","_callee4","transaction","message","serializeMessage","_context5","addSignature","_callee5","transactions","messages","map","tx","_context6","signatures","s","idx","_callee6","_context7","_callee7","EventEmitter","basex","require","module","exports"],"sourceRoot":""}