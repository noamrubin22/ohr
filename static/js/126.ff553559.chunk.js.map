{"version":3,"file":"static/js/126.ff553559.chunk.js","mappings":"wIAAA,IAAAA,EAAAC,EAAA,OAWA,SAASC,EAAWC,GAClB,IAAMC,EAAIC,EAAOC,MAAM,GAEvB,OADAF,EAAEG,cAAcJ,EAAO,GAChBC,CACT,CAEA,IAAMI,EAAa,CACjBC,KAAMJ,EAAOC,MAAM,GACnBI,WAAY,EACZC,SAAU,GAwEZC,EAAAA,EAlEyB,SAACC,EAAiBC,GACzC,MAAO,CACLC,WAAA,SAAWC,GACT,IAAIP,EAAOJ,EAAOY,OAAO,CAACf,EAAWc,EAAKE,QAASF,IAC7CG,EAAYL,EAAa,EACzBM,EAAWC,KAAKC,KAAKb,EAAKS,OAASC,GACzCV,EAAOJ,EAAOY,OAAO,CACnBR,EACAJ,EAAOC,MAAMc,EAAWD,EAAYV,EAAKS,OAAS,GAAGK,KAAK,KAI5D,IAFA,IAAMC,EAAmB,GAEhBC,EAAI,EAAGA,EAAIL,EAAUK,IAAK,CACjC,IAAMC,EAAOrB,EAAOC,MAAM,GAC1BoB,EAAKnB,cAAcM,EAAS,GAC5Ba,EAAKC,WAhCD,EAgCiB,GACrBD,EAAKnB,cAAckB,EAAG,GACtB,IAAMG,EAAQnB,EAAKoB,MAAMJ,EAAIN,GAAYM,EAAI,GAAKN,GAClDK,EAAOM,KAAKzB,EAAOY,OAAO,CAACS,EAAME,I,CAGnC,OAAOJ,CACT,EAEAO,eAAA,SAAeC,EAAkBJ,GAC3B,IAAAK,EAAiCD,GAAOxB,EAAtCC,EAAIwB,EAAAxB,KAAEC,EAAUuB,EAAAvB,WAAEC,EAAQsB,EAAAtB,SAEhC,GAAIiB,EAAMM,aAAa,KAAOrB,EAC5B,MAAM,IAAIb,EAAAmC,eAAe,kBAAmB,kBAG9C,GAhDM,IAgDFP,EAAMQ,UAAU,GAClB,MAAM,IAAIpC,EAAAmC,eAAe,cAAe,cAG1C,GAAIP,EAAMM,aAAa,KAAOvB,EAC5B,MAAM,IAAIX,EAAAmC,eAAe,mBAAoB,mBAG1CH,IACHtB,EAAakB,EAAMM,aAAa,IAGlCvB,IACA,IAAM0B,EAAYT,EAAMC,MAAMG,EAAM,EAAI,GAOxC,OANAvB,EAAOJ,EAAOY,OAAO,CAACR,EAAM4B,KAEnBnB,OAASR,IAChBD,EAAOA,EAAKoB,MAAM,EAAGnB,IAGhB,CACLD,KAAIA,EACJC,WAAUA,EACVC,SAAQA,EAEZ,EAEA2B,iBAAA,SAAiBN,GACf,GAAIA,GAAOA,EAAItB,aAAesB,EAAIvB,KAAKS,OACrC,OAAOc,EAAIvB,IAEf,EAEJ,C,wFCnEY8B,E,2PAAZ,SAAYA,GACVA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACD,CAND,CAAYA,IAAAA,EAAa,KAQzB,IAAMC,IAAOP,EAAA,IACVM,EAAcE,MAAO,CACpBC,GAAIH,EAAcE,KAClBE,YAAa,iBACbC,YAAa,EACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,OACZC,MAAO,CAAC,UAAY,WACpBC,aAAc,SAACC,GAAoC,cAErDjB,EAACM,EAAcY,OAAQ,CACrBT,GAAIH,EAAcY,MAClBR,YAAa,sBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,OACZC,MAAO,CAAC,WACRC,aAAc,SAACG,G,MACb,OAAAC,IAAAA,GAAwC,QAA9BpB,EAAAoB,IAAAA,OAAcD,UAAgB,IAAAnB,EAAAA,EAAI,GAAI,SAC5C,KACA,I,GAERA,EAACM,EAAce,QAAS,CACtBZ,GAAIH,EAAce,OAClBX,YAAa,qBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACM,GAAqC,YAEtDtB,EAACM,EAAciB,OAAQ,CACrBd,GAAIH,EAAciB,MAClBb,YAAa,sBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACC,GAAoC,aACnDO,cAAe,CACb,CACEC,YAAa,uCACbC,WAAY,uCACZC,UAAW,uCACXC,aAAc,0CAIpB5B,EAACM,EAAcuB,SAAU,CACvBpB,GAAIH,EAAcuB,QAClBnB,YAAa,wBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACC,GAAoC,aACnDO,cAAe,CACb,CACEC,YAAa,uCACbC,WAAY,uCACZC,UAAW,uCACXC,aAAc,0CAGnB,GAWGE,GAPExB,EAAcE,KACVF,EAAcY,MACTZ,EAAce,OACnBf,EAAciB,MACZjB,EAAcuB,QAGOE,OAAOC,OAAOzB,IAKpC0B,EAAoB,MA4BpBC,EAAuB,SAClCC,GAEA,IAAMC,EAASN,EAAYO,MAAK,SAACC,GAAM,OAAAA,EAAE1B,qBAAuBuB,CAAzB,IACvC,GAAIC,EAAQ,OAAOA,EACnB,IAAMG,EAAKJ,GAAgB,EAE3B,OADoBL,EAAYO,MAAK,SAACC,GAAM,OAAAA,EAAE3B,cAAgB4B,CAAlB,GAE9C,EASMC,EAA8B,GAC9BC,EAAqD,CAAC,EAE5D,IAAK,IAAMhC,KAAMF,EAAS,CACxB,IAAMmC,EAAcnC,EAAQE,GACpBe,EAAkBkB,EAAWlB,cACrC,GAAIA,EACF,IAAK,IAAIhC,EAAI,EAAGA,EAAIgC,EAAcvC,OAAQO,IAAK,CAC7C,IAAMmD,EAAOnB,EAAchC,GAC3BgD,EAAkB3C,KAAK8C,EAAKlB,aAC5BgB,EAAmBE,EAAKlB,aAAegB,EACrCE,EAAKlB,YAAYmB,QAAQ,KAAM,KAChCC,EAAA,CACCH,YAAWA,GACRC,E,EASJ,IC1KHlC,EAAK,EACHqC,EAA4B,GAOrBC,EAAM,SAACC,EAAcC,EAAkBzE,GAClD,IAAM0E,EAAW,CACfF,KAAIA,EACJvC,GAAI0C,SAAS1C,GACb2C,KAAM,IAAIC,MAERJ,IAASC,EAAID,QAAUA,GACvBzE,IAAM0E,EAAI1E,KAAOA,GAsBvB,SAAkBuE,GAChB,IAAK,IAAIvD,EAAI,EAAGA,EAAIsD,EAAY7D,OAAQO,IACtC,IACEsD,EAAYtD,GAAGuD,E,CACf,MAAOO,GACPC,QAAQC,MAAMF,E,CAGpB,CA7BEG,CAASP,EACX,EAsCsB,qBAAXQ,SACTA,OAAOC,mBAhCa,SAACC,GAErB,OADAd,EAAYjD,KAAK+D,GACV,WACL,IAAMpE,EAAIsD,EAAYe,QAAQD,IAEnB,IAAPpE,IAEFsD,EAAYtD,GAAKsD,EAAYA,EAAY7D,OAAS,GAClD6D,EAAYgB,MAEhB,CACF,G,qmEChCMC,EAAgB,CACpB,CACEC,SAAU/B,IAIRgC,EAAc,WAClB,OAAAC,QAAQC,WAAWT,OAAOU,YAAaV,OAAOU,UAAUC,KAAxD,EAEIC,EAAS,WAEL,IAAAD,EAAQD,UAASC,IACzB,IAAKA,EACH,MAAM,IAAInE,EAAAA,eACR,iCACA,mBAEJ,OAAOmE,CACT,EAEA,SAAeE,I,gGACE,SAAMD,IAASE,cAAc,CAC1CC,QAASV,K,OAEX,OAHMW,EAAS1E,EAAA2E,OAGXC,MAAMC,QAAQH,GAAgB,CAAP,EAAOA,GAC3B,CAAC,EAAD,CAACA,I,OAGV,SAAeI,I,0FACG,SAAMR,IAASS,c,OAC/B,MAAO,CAAP,EADgB/E,EAAA2E,OACDK,QAAO,SAAC1C,GAAM,OAAAA,EAAE0B,WAAa/B,CAAf,K,OAiB/B,IAAAgD,EAAA,SAAAC,GAME,SAAAD,EAAYP,GAAZ,IAAAS,EACED,EAAAE,KAAA,OAAO,K,OAJTD,EAAAvG,QAAUQ,KAAKiG,MAAsB,MAAhBjG,KAAKkG,UAC1BH,EAAAtG,WAAa,GAYbsG,EAAAI,OAAmB,GAEnBJ,EAAAK,KAAO,WACL,OAAIL,EAAKI,OAAOtG,OACPiF,QAAQC,QAASgB,EAAKI,OAAOE,SAG/B,IAAIvB,SAAQ,SAACwB,GAClBP,EAAKQ,cAAgBD,CACvB,GACF,EACAP,EAAAS,cAAgB,SAACtC,GACf,IAAMuC,EAASzH,EAAO0H,KAAKxC,EAAE9E,KAAKqH,QAE9BV,EAAKQ,eACPR,EAAKQ,cAAcE,GACnBV,EAAKQ,cAAgB,MAErBR,EAAKI,OAAO1F,KAAKgG,EAErB,EA2FAV,EAAAY,oBAAqB,EACrBZ,EAAAa,gBAAkB,SAAC1C,GACb6B,EAAKY,qBACTZ,EAAKY,oBAAqB,EAC1BZ,EAAKc,KAAK,aAAc3C,GAC1B,EAgBA6B,EAAAe,SAAW,SAAOnH,GAAY,OAAAoH,EAAAhB,OAAA,qB,6DAClB,SAAMiB,KAAKC,oBAAmB,kBAAAF,EAAAhB,OAAA,qB,wEAC9BvG,GAAFoB,EAA0BoG,MAAjBxH,QAAEC,EAAUmB,EAAAnB,WAC3BkE,EAAI,OAAQ,MAAQhE,EAAKuH,SAAS,QAC5BC,GAAUC,EAAAA,EAAAA,GAAW5H,EAASC,GAE9BU,EAASgH,EAAQzH,WAAWC,GAEzBS,EAAI,E,wBAAGA,EAAID,EAAON,OACzB,GAAMmH,KAAK1B,OAAO+B,WAAW,EAAGlH,EAAOC,KADR,M,OAC/BkH,EAAA/B,O,wBADiCnF,I,oBAQ1BmH,EAASJ,EAAQlG,iBAAiBN,IAAK,MAC/B,GAAMqG,KAAKZ,Q,cAApBK,EAASa,EAAA/B,OACf5E,EAAMwG,EAAQzG,eAAeC,EAAK8F,G,aAIpC,OADA9C,EAAI,OAAQ,MAAQ4D,EAAOL,SAAS,QAC7B,CAAP,EAAOK,G,UACD,OAAC,SAACrD,GACR,GAAIA,GAAKA,EAAEL,SAAWK,EAAEL,QAAQ2D,SAAS,SAGvC,MAFAzB,EAAKa,gBAAgB1C,GAEf,IAAIuD,EAAAA,kCAAkCvD,EAAEL,SAGhD,MAAMK,CACR,K,OACA,MAAO,CAAP,EA/BUtD,EAAA2E,Q,QA7IVQ,EAAKT,OAASA,EACdS,EAAKzC,YACyB,kBAArBgC,EAAOoC,UACV5E,EAAqBwC,EAAOoC,gBAC5BC,EACNrC,EAAOsC,iBAAiB,cAAe7B,EAAKS,e,CAC9C,CA0KF,OAxL6CqB,EAAAhC,EAAAC,GA8F9BD,EAAAiC,QAAb,W,kGACmB,SAAM3C,K,OACvB,OADMvE,EAAAmH,EAAAC,WAAA,GAAWV,EAAA/B,OAA4B,IAAtCD,EAAM1E,EAAA,GACN,CAAP,EAAOiF,EAAgBoC,KAAK3C,I,QAMjBO,EAAAqC,cAAb,W,gGACkB,SAAMxC,K,OACtB,OAAuB,KADjBvE,EAAUP,EAAA2E,QACJ1F,OAAqB,CAAP,EAAO,MAC1B,CAAP,EAAOgG,EAAgBoC,KAAK9G,EAAQ,K,QAMzB0E,EAAAoC,KAAb,SAAkB3C,G,kGAChB,SAAMA,EAAO2C,Q,OAYb,OAZArH,EAAA2E,OACM4C,EAAY,IAAItC,EAAgBP,GAEhC8C,EAAe,SAAClE,GAChBoB,IAAWpB,EAAEoB,SACfJ,IAASmD,oBAAoB,aAAcD,GAE3CD,EAAUvB,gBAAgB,IAAI0B,EAAAA,oBAElC,EAEApD,IAAS0C,iBAAiB,aAAcQ,GACjC,CAAP,EAAOD,G,QAaHtC,EAAA0C,UAAAC,MAAN,W,0FACE,SAAMxB,KAAKyB,qB,OAEX,OAFA7H,EAAA2E,OACAyB,KAAK1B,OAAO+C,oBAAoB,cAAerB,KAAKR,eACpD,GAAMQ,KAAK1B,OAAOkD,S,cAAlB5H,EAAA2E,O,YA2CFM,EAAA0C,UAAAG,eAAA,WAAkB,EA9IX7C,EAAAhB,YAAcA,EAKdgB,EAAA8C,KAAOjD,EAQPG,EAAA+C,OAAS,SACdC,GAEA,IAAIC,GAAe,EA6BnB,OApGJ,W,gGAC0B,SAAMpD,K,OAC9B,OADMqD,EAAkBnI,EAAA2E,QACJ1F,OAAS,EAAU,CAAP,EAAOkJ,EAAgB,IACvC,GAAM5D,K,OACtB,MAAO,CAAP,EADgBvE,EAAA2E,OACD,I,OAoEbyD,GAAuBC,MACrB,SAAC3D,GACC,GAAKA,GAIE,IAAKwD,EAAc,CACxB,IAAMxF,EACwB,kBAArBgC,EAAOoC,UACV5E,EAAqBwC,EAAOoC,gBAC5BC,EACNkB,EAASK,KAAK,CACZtF,KAAM,MACNuF,WAAY7D,EACZhC,YAAWA,IAEbuF,EAASO,U,OAbTP,EAASzE,MACP,IAAIiF,EAAAA,2BAA2B,sCAcrC,IACA,SAACjF,GACCyE,EAASzE,MAAM,IAAIiF,EAAAA,2BAA2BjF,EAAMP,SACtD,IAOK,CACLyF,YALF,WACER,GAAe,CACjB,EAKF,EA+FFjD,C,CAxLA,CAA6C0D,EAAAA,I,qEChEvCC,EAAMC,OAAO,cAEbC,EAAU,wBAKd,SAAAA,EAAaC,EAAMC,GAGjB,GAH0BC,EAAA,KAAAH,GAC1BE,EAAUE,EAAaF,GAEnBD,aAAgBD,EAAY,CAC9B,GAAIC,EAAKI,UAAYH,EAAQG,MAC3B,OAAOJ,EAEPA,EAAOA,EAAK7K,KAEhB,CAEAkL,EAAM,aAAcL,EAAMC,GAC1B5C,KAAK4C,QAAUA,EACf5C,KAAK+C,QAAUH,EAAQG,MACvB/C,KAAKiD,MAAMN,GAEP3C,KAAKhF,SAAWwH,EAClBxC,KAAKlI,MAAQ,GAEbkI,KAAKlI,MAAQkI,KAAKkD,SAAWlD,KAAKhF,OAAOmI,QAG3CH,EAAM,OAAQhD,KAChB,CAzBC,OAyBAoD,EAAAV,EAAA,EAAAW,IAAA,QAAAvL,MAED,SAAO6K,GACL,IAAMW,EAAItD,KAAK4C,QAAQG,MAAQQ,EAAGC,EAAEC,iBAAmBF,EAAGC,EAAEE,YACtDC,EAAIhB,EAAKiB,MAAMN,GAErB,IAAKK,EACH,MAAM,IAAIE,UAAU,uBAADjL,OAAwB+J,IAG7C3C,KAAKkD,cAAoBvC,IAATgD,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlB3D,KAAKkD,WACPlD,KAAKkD,SAAW,IAIbS,EAAE,GAGL3D,KAAKhF,OAAS,IAAI8I,EAAOH,EAAE,GAAI3D,KAAK4C,QAAQG,OAF5C/C,KAAKhF,OAASwH,CAIlB,GAAC,CAAAa,IAAA,WAAAvL,MAED,WACE,OAAOkI,KAAKlI,KACd,GAAC,CAAAuL,IAAA,OAAAvL,MAED,SAAMqL,GAGJ,GAFAH,EAAM,kBAAmBG,EAASnD,KAAK4C,QAAQG,OAE3C/C,KAAKhF,SAAWwH,GAAOW,IAAYX,EACrC,OAAO,EAGT,GAAuB,kBAAZW,EACT,IACEA,EAAU,IAAIW,EAAOX,EAASnD,KAAK4C,QACrC,CAAE,MAAOmB,GACP,OAAO,CACT,CAGF,OAAOC,EAAIb,EAASnD,KAAKkD,SAAUlD,KAAKhF,OAAQgF,KAAK4C,QACvD,GAAC,CAAAS,IAAA,aAAAvL,MAED,SAAY6K,EAAMC,GAChB,KAAMD,aAAgBD,GACpB,MAAM,IAAImB,UAAU,4BAUtB,GAPKjB,GAA8B,kBAAZA,IACrBA,EAAU,CACRG,QAASH,EACTqB,mBAAmB,IAID,KAAlBjE,KAAKkD,SACP,MAAmB,KAAflD,KAAKlI,OAGF,IAAIoM,EAAMvB,EAAK7K,MAAO8K,GAASuB,KAAKnE,KAAKlI,OAC3C,GAAsB,KAAlB6K,EAAKO,SACd,MAAmB,KAAfP,EAAK7K,OAGF,IAAIoM,EAAMlE,KAAKlI,MAAO8K,GAASuB,KAAKxB,EAAK3H,QAGlD,IAAMoJ,GACe,OAAlBpE,KAAKkD,UAAuC,MAAlBlD,KAAKkD,YACb,OAAlBP,EAAKO,UAAuC,MAAlBP,EAAKO,UAC5BmB,GACe,OAAlBrE,KAAKkD,UAAuC,MAAlBlD,KAAKkD,YACb,OAAlBP,EAAKO,UAAuC,MAAlBP,EAAKO,UAC5BoB,EAAatE,KAAKhF,OAAOmI,UAAYR,EAAK3H,OAAOmI,QACjDoB,GACe,OAAlBvE,KAAKkD,UAAuC,OAAlBlD,KAAKkD,YACb,OAAlBP,EAAKO,UAAuC,OAAlBP,EAAKO,UAC5BsB,EACJR,EAAIhE,KAAKhF,OAAQ,IAAK2H,EAAK3H,OAAQ4H,KAChB,OAAlB5C,KAAKkD,UAAuC,MAAlBlD,KAAKkD,YACX,OAAlBP,EAAKO,UAAuC,MAAlBP,EAAKO,UAC9BuB,EACJT,EAAIhE,KAAKhF,OAAQ,IAAK2H,EAAK3H,OAAQ4H,KAChB,OAAlB5C,KAAKkD,UAAuC,MAAlBlD,KAAKkD,YACX,OAAlBP,EAAKO,UAAuC,MAAlBP,EAAKO,UAEpC,OACEkB,GACAC,GACCC,GAAcC,GACfC,GACAC,CAEJ,IAAC,EAAApB,IAAA,MAAAqB,IA1HD,WACE,OAAOlC,CACT,KAACE,CAAA,CAHa,GA8HhBiC,EAAOpM,QAAUmK,EAEjB,IAAMI,EAAelL,EAAQ,OAC7BgN,EAAkBhN,EAAQ,OAAlB2L,EAAEqB,EAAFrB,GAAIC,EAACoB,EAADpB,EACNQ,EAAMpM,EAAQ,OACdoL,EAAQpL,EAAQ,OAChBkM,EAASlM,EAAQ,OACjBsM,EAAQtM,EAAQ,M,sGCtIhBsM,EAAK,wBACT,SAAAA,EAAaW,EAAOjC,GAAS,IAAA7D,EAAA,KAG3B,GAH2B8D,EAAA,KAAAqB,GAC3BtB,EAAUE,EAAaF,GAEnBiC,aAAiBX,EACnB,OACEW,EAAM9B,UAAYH,EAAQG,OAC1B8B,EAAMZ,sBAAwBrB,EAAQqB,kBAE/BY,EAEA,IAAIX,EAAMW,EAAMC,IAAKlC,GAIhC,GAAIiC,aAAiBnC,EAKnB,OAHA1C,KAAK8E,IAAMD,EAAM/M,MACjBkI,KAAK+E,IAAM,CAAC,CAACF,IACb7E,KAAKgF,SACEhF,KAkBT,GAfAA,KAAK4C,QAAUA,EACf5C,KAAK+C,QAAUH,EAAQG,MACvB/C,KAAKiE,oBAAsBrB,EAAQqB,kBAGnCjE,KAAK8E,IAAMD,EACX7E,KAAK+E,IAAMF,EACRI,MAAM,MAENC,KAAI,SAAA5B,GAAC,OAAIvE,EAAKoG,WAAW7B,EAAE8B,OAAO,IAIlCxG,QAAO,SAAAyG,GAAC,OAAIA,EAAExM,MAAM,KAElBmH,KAAK+E,IAAIlM,OACZ,MAAM,IAAIgL,UAAU,yBAADjL,OAA0BiM,IAI/C,GAAI7E,KAAK+E,IAAIlM,OAAS,EAAG,CAEvB,IAAMyM,EAAQtF,KAAK+E,IAAI,GAEvB,GADA/E,KAAK+E,IAAM/E,KAAK+E,IAAInG,QAAO,SAAAyG,GAAC,OAAKE,EAAUF,EAAE,GAAG,IACxB,IAApBrF,KAAK+E,IAAIlM,OACXmH,KAAK+E,IAAM,CAACO,QACP,GAAItF,KAAK+E,IAAIlM,OAAS,EAAG,CAC9B,IACwB2M,EADxBC,EAAAC,EACgB1F,KAAK+E,KAAG,IAAxB,IAAAU,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA0B,KAAfR,EAACG,EAAA1N,MACV,GAAiB,IAAbuN,EAAExM,QAAgBiN,EAAMT,EAAE,IAAK,CACjCrF,KAAK+E,IAAM,CAACM,GACZ,KACF,CACF,CAAC,OAAAU,GAAAN,EAAAvI,EAAA6I,EAAA,SAAAN,EAAAO,GAAA,CACH,CACF,CAEAhG,KAAKgF,QACP,CAgIC,OAhIA5B,EAAAc,EAAA,EAAAb,IAAA,SAAAvL,MAED,WAOE,OANAkI,KAAK6E,MAAQ7E,KAAK+E,IACfG,KAAI,SAACe,GACJ,OAAOA,EAAMC,KAAK,KAAKd,MACzB,IACCc,KAAK,MACLd,OACIpF,KAAK6E,KACd,GAAC,CAAAxB,IAAA,WAAAvL,MAED,WACE,OAAOkI,KAAK6E,KACd,GAAC,CAAAxB,IAAA,aAAAvL,MAED,SAAY+M,GAAO,IAAAsB,EAAA,KACjBtB,EAAQA,EAAMO,OAId,IAAMgB,EAAWzK,OAAO0K,KAAKrG,KAAK4C,SAASsD,KAAK,KAC1CI,EAAU,cAAH1N,OAAiBwN,EAAQ,KAAAxN,OAAIiM,GACpC0B,EAASC,EAAM9B,IAAI4B,GACzB,GAAIC,EACF,OAAOA,EAGT,IAAMxD,EAAQ/C,KAAK4C,QAAQG,MAErB0D,EAAK1D,EAAQQ,EAAGC,EAAEkD,kBAAoBnD,EAAGC,EAAEmD,aACjD9B,EAAQA,EAAMrI,QAAQiK,EAAIG,EAAc5G,KAAK4C,QAAQqB,oBACrDjB,EAAM,iBAAkB6B,GAExBA,EAAQA,EAAMrI,QAAQ+G,EAAGC,EAAEqD,gBAAiBC,GAC5C9D,EAAM,kBAAmB6B,GAczB,IAAIkC,GALJlC,GAHAA,GAHAA,EAAQA,EAAMrI,QAAQ+G,EAAGC,EAAEwD,WAAYC,IAGzBzK,QAAQ+G,EAAGC,EAAE0D,WAAYC,IAGzBlC,MAAM,OAAOiB,KAAK,MAM7BjB,MAAM,KACNC,KAAI,SAAAvC,GAAI,OAAIyE,EAAgBzE,EAAMwD,EAAKvD,QAAQ,IAC/CsD,KAAK,KACLjB,MAAM,OAENC,KAAI,SAAAvC,GAAI,OAAI0E,EAAY1E,EAAMwD,EAAKvD,QAAQ,IAE1CG,IAEFgE,EAAYA,EAAUnI,QAAO,SAAA+D,GAE3B,OADAK,EAAM,uBAAwBL,EAAMwD,EAAKvD,WAChCD,EAAKiB,MAAML,EAAGC,EAAEC,iBAC3B,KAEFT,EAAM,aAAc+D,GAKpB,IAE8BO,EAFxBC,EAAW,IAAIC,IACfC,EAAcV,EAAU7B,KAAI,SAAAvC,GAAI,OAAI,IAAID,EAAWC,EAAMwD,EAAKvD,QAAQ,IAAC8E,EAAAhC,EAC1D+B,GAAW,IAA9B,IAAAC,EAAA/B,MAAA2B,EAAAI,EAAA9B,KAAAC,MAAgC,KAArBlD,EAAI2E,EAAAxP,MACb,GAAIyN,EAAU5C,GACZ,MAAO,CAACA,GAEV4E,EAASxC,IAAIpC,EAAK7K,MAAO6K,EAC3B,CAAC,OAAAoD,GAAA2B,EAAAxK,EAAA6I,EAAA,SAAA2B,EAAA1B,GAAA,CACGuB,EAASI,KAAO,GAAKJ,EAASK,IAAI,KACpCL,EAASM,OAAO,IAGlB,IAAMtH,EAAMuH,EAAOP,EAAS3L,UAE5B,OADA4K,EAAMzB,IAAIuB,EAAS/F,GACZA,CACT,GAAC,CAAA8C,IAAA,aAAAvL,MAED,SAAY+M,EAAOjC,GACjB,KAAMiC,aAAiBX,GACrB,MAAM,IAAIL,UAAU,uBAGtB,OAAO7D,KAAK+E,IAAIgD,MAAK,SAACC,GACpB,OACEC,EAAcD,EAAiBpF,IAC/BiC,EAAME,IAAIgD,MAAK,SAACG,GACd,OACED,EAAcC,EAAkBtF,IAChCoF,EAAgBG,OAAM,SAACC,GACrB,OAAOF,EAAiBC,OAAM,SAACE,GAC7B,OAAOD,EAAeE,WAAWD,EAAiBzF,EACpD,GACF,GAEJ,GAEJ,GACF,GAEA,CAAAS,IAAA,OAAAvL,MACA,SAAMqL,GACJ,IAAKA,EACH,OAAO,EAGT,GAAuB,kBAAZA,EACT,IACEA,EAAU,IAAIW,EAAOX,EAASnD,KAAK4C,QACrC,CAAE,MAAOmB,GACP,OAAO,CACT,CAGF,IAAK,IAAI3K,EAAI,EAAGA,EAAI4G,KAAK+E,IAAIlM,OAAQO,IACnC,GAAImP,EAAQvI,KAAK+E,IAAI3L,GAAI+J,EAASnD,KAAK4C,SACrC,OAAO,EAGX,OAAO,CACT,KAACsB,CAAA,CA7LQ,GA+LXS,EAAOpM,QAAU2L,EAEjB,IACMsC,EAAQ,IADF5O,EAAQ,OACN,CAAQ,CAAE4Q,IAAK,MAEvB1F,EAAelL,EAAQ,OACvB8K,EAAa9K,EAAQ,OACrBoL,EAAQpL,EAAQ,OAChBkM,EAASlM,EAAQ,OACvBgN,EAMIhN,EAAQ,OALV2L,EAAEqB,EAAFrB,GACAC,EAACoB,EAADpB,EACAsD,EAAqBlC,EAArBkC,sBACAG,EAAgBrC,EAAhBqC,iBACAE,EAAgBvC,EAAhBuC,iBAGI5B,EAAY,SAAAF,GAAC,MAAgB,aAAZA,EAAEvN,KAAoB,EACvCgO,EAAQ,SAAAT,GAAC,MAAgB,KAAZA,EAAEvN,KAAY,EAI3BmQ,EAAgB,SAACR,EAAa7E,GAKlC,IAJA,IAAIrC,GAAS,EACPkI,EAAuBhB,EAAYjO,QACrCkP,EAAiBD,EAAqB/K,MAEnC6C,GAAUkI,EAAqB5P,QACpC0H,EAASkI,EAAqBN,OAAM,SAACQ,GACnC,OAAOD,EAAeJ,WAAWK,EAAiB/F,EACpD,IAEA8F,EAAiBD,EAAqB/K,MAGxC,OAAO6C,CACT,EAKM6G,EAAkB,SAACzE,EAAMC,GAU7B,OATAI,EAAM,OAAQL,EAAMC,GACpBD,EAAOiG,EAAcjG,EAAMC,GAC3BI,EAAM,QAASL,GACfA,EAAOkG,EAAclG,EAAMC,GAC3BI,EAAM,SAAUL,GAChBA,EAAOmG,EAAenG,EAAMC,GAC5BI,EAAM,SAAUL,GAChBA,EAAOoG,EAAapG,EAAMC,GAC1BI,EAAM,QAASL,GACRA,CACT,EAEMqG,EAAM,SAAA3O,GAAE,OAAKA,GAA2B,MAArBA,EAAG4O,eAAgC,MAAP5O,CAAU,EASzDwO,EAAgB,SAAClG,EAAMC,GAAO,OAClCD,EAAKyC,OAAOH,MAAM,OAAOC,KAAI,SAACG,GAC5B,OAAO6D,EAAa7D,EAAGzC,EACzB,IAAGsD,KAAK,IAAI,EAERgD,EAAe,SAACvG,EAAMC,GAC1B,IAAMU,EAAIV,EAAQG,MAAQQ,EAAGC,EAAE2F,YAAc5F,EAAGC,EAAE4F,OAClD,OAAOzG,EAAKnG,QAAQ8G,GAAG,SAAC+F,EAAGC,EAAG3F,EAAG4F,EAAGC,GAElC,IAAIC,EAoBJ,OArBAzG,EAAM,QAASL,EAAM0G,EAAGC,EAAG3F,EAAG4F,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAIrF,GACb8F,EAAM,KAAH7Q,OAAQ0Q,EAAC,UAAA1Q,QAAU0Q,EAAI,EAAC,UAClBN,EAAIO,GAEbE,EAAM,KAAH7Q,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,QAAA/K,OAAO0Q,EAAC,KAAA1Q,QAAK+K,EAAI,EAAC,QAC1B6F,GACTxG,EAAM,kBAAmBwG,GACzBC,EAAM,KAAH7Q,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,EAAC,KAAA3Q,OAAI4Q,EAAE,MAAA5Q,OACvB0Q,EAAC,KAAA1Q,QAAK+K,EAAI,EAAC,SAGhB8F,EAAM,KAAH7Q,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,EAAC,MAAA3Q,OACjB0Q,EAAC,KAAA1Q,QAAK+K,EAAI,EAAC,QAGlBX,EAAM,eAAgByG,GACfA,CACT,GACF,EAUMb,EAAgB,SAACjG,EAAMC,GAAO,OAClCD,EAAKyC,OAAOH,MAAM,OAAOC,KAAI,SAACG,GAC5B,OAAOqE,EAAarE,EAAGzC,EACzB,IAAGsD,KAAK,IAAI,EAERwD,EAAe,SAAC/G,EAAMC,GAC1BI,EAAM,QAASL,EAAMC,GACrB,IAAMU,EAAIV,EAAQG,MAAQQ,EAAGC,EAAEmG,YAAcpG,EAAGC,EAAEoG,OAC5CC,EAAIjH,EAAQqB,kBAAoB,KAAO,GAC7C,OAAOtB,EAAKnG,QAAQ8G,GAAG,SAAC+F,EAAGC,EAAG3F,EAAG4F,EAAGC,GAElC,IAAIC,EA2CJ,OA5CAzG,EAAM,QAASL,EAAM0G,EAAGC,EAAG3F,EAAG4F,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAIrF,GACb8F,EAAM,KAAH7Q,OAAQ0Q,EAAC,QAAA1Q,OAAOiR,EAAC,MAAAjR,QAAM0Q,EAAI,EAAC,UACtBN,EAAIO,GAEXE,EADQ,MAANH,EACI,KAAH1Q,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,MAAA/K,OAAKiR,EAAC,MAAAjR,OAAK0Q,EAAC,KAAA1Q,QAAK+K,EAAI,EAAC,QAEjC,KAAH/K,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,MAAA/K,OAAKiR,EAAC,MAAAjR,QAAM0Q,EAAI,EAAC,UAE3BE,GACTxG,EAAM,kBAAmBwG,GAGrBC,EAFM,MAANH,EACQ,MAAN3F,EACI,KAAH/K,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,EAAC,KAAA3Q,OAAI4Q,EAAE,MAAA5Q,OACvB0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,QAAK2Q,EAAI,EAAC,MAEf,KAAH3Q,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,EAAC,KAAA3Q,OAAI4Q,EAAE,MAAA5Q,OACvB0Q,EAAC,KAAA1Q,QAAK+K,EAAI,EAAC,QAGZ,KAAH/K,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,EAAC,KAAA3Q,OAAI4Q,EAAE,MAAA5Q,QACtB0Q,EAAI,EAAC,YAGbtG,EAAM,SAGFyG,EAFM,MAANH,EACQ,MAAN3F,EACI,KAAH/K,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,GAAC3Q,OACnBiR,EAAC,MAAAjR,OAAK0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,QAAK2Q,EAAI,EAAC,MAEnB,KAAH3Q,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,GAAC3Q,OACnBiR,EAAC,MAAAjR,OAAK0Q,EAAC,KAAA1Q,QAAK+K,EAAI,EAAC,QAGhB,KAAH/K,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,EAAC,MAAA3Q,QAChB0Q,EAAI,EAAC,WAIftG,EAAM,eAAgByG,GACfA,CACT,GACF,EAEMX,EAAiB,SAACnG,EAAMC,GAE5B,OADAI,EAAM,iBAAkBL,EAAMC,GACvBD,EAAKsC,MAAM,OAAOC,KAAI,SAACG,GAC5B,OAAOyE,EAAczE,EAAGzC,EAC1B,IAAGsD,KAAK,IACV,EAEM4D,EAAgB,SAACnH,EAAMC,GAC3BD,EAAOA,EAAKyC,OACZ,IAAM9B,EAAIV,EAAQG,MAAQQ,EAAGC,EAAEuG,aAAexG,EAAGC,EAAEwG,QACnD,OAAOrH,EAAKnG,QAAQ8G,GAAG,SAACmG,EAAKQ,EAAMX,EAAG3F,EAAG4F,EAAGC,GAC1CxG,EAAM,SAAUL,EAAM8G,EAAKQ,EAAMX,EAAG3F,EAAG4F,EAAGC,GAC1C,IAAMU,EAAKlB,EAAIM,GACTa,EAAKD,GAAMlB,EAAIrF,GACfyG,EAAKD,GAAMnB,EAAIO,GACfc,EAAOD,EA+Db,MA7Da,MAATH,GAAgBI,IAClBJ,EAAO,IAKTT,EAAK5G,EAAQqB,kBAAoB,KAAO,GAEpCiG,EAGAT,EAFW,MAATQ,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACFxG,EAAI,GAEN4F,EAAI,EAES,MAATU,GAGFA,EAAO,KACHE,GACFb,GAAKA,EAAI,EACT3F,EAAI,EACJ4F,EAAI,IAEJ5F,GAAKA,EAAI,EACT4F,EAAI,IAEY,OAATU,IAGTA,EAAO,IACHE,EACFb,GAAKA,EAAI,EAET3F,GAAKA,EAAI,GAIA,MAATsG,IACFT,EAAK,MAGPC,EAAM,GAAH7Q,OAAMqR,EAAOX,EAAC,KAAA1Q,OAAI+K,EAAC,KAAA/K,OAAI2Q,GAAC3Q,OAAG4Q,IACrBW,EACTV,EAAM,KAAH7Q,OAAQ0Q,EAAC,QAAA1Q,OAAO4Q,EAAE,MAAA5Q,QAAM0Q,EAAI,EAAC,UACvBc,IACTX,EAAM,KAAH7Q,OAAQ0Q,EAAC,KAAA1Q,OAAI+K,EAAC,MAAA/K,OAAK4Q,EAAE,MAAA5Q,OACnB0Q,EAAC,KAAA1Q,QAAK+K,EAAI,EAAC,SAGlBX,EAAM,gBAAiByG,GAEhBA,CACT,GACF,EAIMV,EAAe,SAACpG,EAAMC,GAG1B,OAFAI,EAAM,eAAgBL,EAAMC,GAErBD,EAAKyC,OAAO5I,QAAQ+G,EAAGC,EAAE8G,MAAO,GACzC,EAEMjD,EAAc,SAAC1E,EAAMC,GAEzB,OADAI,EAAM,cAAeL,EAAMC,GACpBD,EAAKyC,OACT5I,QAAQ+G,EAAGX,EAAQqB,kBAAoBT,EAAE+G,QAAU/G,EAAEgH,MAAO,GACjE,EAOM5D,EAAgB,SAAA6D,GAAK,OAAI,SAACC,EAC9BhL,EAAMiL,EAAIC,EAAIC,EAAIC,EAAKC,EACvBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,GA2BrB,OAzBE3L,EADEsJ,EAAI2B,GACC,GACE3B,EAAI4B,GACN,KAAHhS,OAAQ+R,EAAE,QAAA/R,OAAO6R,EAAQ,KAAO,IAC3BzB,EAAI6B,GACN,KAAHjS,OAAQ+R,EAAE,KAAA/R,OAAIgS,EAAE,MAAAhS,OAAK6R,EAAQ,KAAO,IAC/BK,EACF,KAAHlS,OAAQ8G,GAEL,KAAH9G,OAAQ8G,GAAI9G,OAAG6R,EAAQ,KAAO,IAIlCO,EADEhC,EAAIiC,GACD,GACIjC,EAAIkC,GACR,IAAHtS,QAAQqS,EAAK,EAAC,UACPjC,EAAImC,GACR,IAAHvS,OAAOqS,EAAE,KAAArS,QAAKsS,EAAK,EAAC,QACbE,EACJ,KAAHxS,OAAQqS,EAAE,KAAArS,OAAIsS,EAAE,KAAAtS,OAAIuS,EAAE,KAAAvS,OAAIwS,GACnBX,EACJ,IAAH7R,OAAOqS,EAAE,KAAArS,OAAIsS,EAAE,KAAAtS,QAAKuS,EAAK,EAAC,MAEvB,KAAHvS,OAAQoS,GAGL,GAAApS,OAAI8G,EAAI,KAAA9G,OAAIoS,GAAM5F,MAC3B,CAAC,EAEKmD,EAAU,SAACxD,EAAK5B,EAASP,GAC7B,IAAK,IAAIxJ,EAAI,EAAGA,EAAI2L,EAAIlM,OAAQO,IAC9B,IAAK2L,EAAI3L,GAAG+K,KAAKhB,GACf,OAAO,EAIX,GAAIA,EAAQmI,WAAWzS,SAAW+J,EAAQqB,kBAAmB,CAM3D,IAAK,IAAI7K,EAAI,EAAGA,EAAI2L,EAAIlM,OAAQO,IAE9B,GADA4J,EAAM+B,EAAI3L,GAAG4B,QACT+J,EAAI3L,GAAG4B,SAAW0H,EAAWF,KAI7BuC,EAAI3L,GAAG4B,OAAOsQ,WAAWzS,OAAS,EAAG,CACvC,IAAM0S,EAAUxG,EAAI3L,GAAG4B,OACvB,GAAIuQ,EAAQC,QAAUrI,EAAQqI,OAC1BD,EAAQE,QAAUtI,EAAQsI,OAC1BF,EAAQG,QAAUvI,EAAQuI,MAC5B,OAAO,CAEX,CAIF,OAAO,CACT,CAEA,OAAO,CACT,C,kECzgBM1I,EAAQpL,EAAQ,OACtBgN,EAAyChN,EAAQ,OAAzC+T,EAAU/G,EAAV+G,WAAYC,EAAgBhH,EAAhBgH,iBACpBC,EAAkBjU,EAAQ,OAAlB2L,EAAEsI,EAAFtI,GAAIC,EAACqI,EAADrI,EAENV,EAAelL,EAAQ,OACrBkU,EAAuBlU,EAAQ,OAA/BkU,mBACFhI,EAAM,wBACV,SAAAA,EAAaX,EAASP,GAGpB,GAH6BC,EAAA,KAAAiB,GAC7BlB,EAAUE,EAAaF,GAEnBO,aAAmBW,EAAQ,CAC7B,GAAIX,EAAQJ,UAAYH,EAAQG,OAC5BI,EAAQc,sBAAwBrB,EAAQqB,kBAC1C,OAAOd,EAEPA,EAAUA,EAAQA,OAEtB,MAAO,GAAuB,kBAAZA,EAChB,MAAM,IAAIU,UAAU,oBAADjL,OAAqBuK,IAG1C,GAAIA,EAAQtK,OAAS8S,EACnB,MAAM,IAAI9H,UAAU,0BAADjL,OACS+S,EAAU,gBAIxC3I,EAAM,SAAUG,EAASP,GACzB5C,KAAK4C,QAAUA,EACf5C,KAAK+C,QAAUH,EAAQG,MAGvB/C,KAAKiE,oBAAsBrB,EAAQqB,kBAEnC,IAAMN,EAAIR,EAAQiC,OAAOxB,MAAMhB,EAAQG,MAAQQ,EAAGC,EAAEuI,OAASxI,EAAGC,EAAEwI,OAElE,IAAKrI,EACH,MAAM,IAAIE,UAAU,oBAADjL,OAAqBuK,IAU1C,GAPAnD,KAAK8E,IAAM3B,EAGXnD,KAAKwL,OAAS7H,EAAE,GAChB3D,KAAKyL,OAAS9H,EAAE,GAChB3D,KAAK0L,OAAS/H,EAAE,GAEZ3D,KAAKwL,MAAQI,GAAoB5L,KAAKwL,MAAQ,EAChD,MAAM,IAAI3H,UAAU,yBAGtB,GAAI7D,KAAKyL,MAAQG,GAAoB5L,KAAKyL,MAAQ,EAChD,MAAM,IAAI5H,UAAU,yBAGtB,GAAI7D,KAAK0L,MAAQE,GAAoB5L,KAAK0L,MAAQ,EAChD,MAAM,IAAI7H,UAAU,yBAIjBF,EAAE,GAGL3D,KAAKsL,WAAa3H,EAAE,GAAGsB,MAAM,KAAKC,KAAI,SAAC7K,GACrC,GAAI,WAAW8J,KAAK9J,GAAK,CACvB,IAAM4R,GAAO5R,EACb,GAAI4R,GAAO,GAAKA,EAAML,EACpB,OAAOK,CAEX,CACA,OAAO5R,CACT,IAVA2F,KAAKsL,WAAa,GAapBtL,KAAKkM,MAAQvI,EAAE,GAAKA,EAAE,GAAGsB,MAAM,KAAO,GACtCjF,KAAKgF,QACP,CA+MC,OA/MA5B,EAAAU,EAAA,EAAAT,IAAA,SAAAvL,MAED,WAKE,OAJAkI,KAAKmD,QAAU,GAAHvK,OAAMoH,KAAKwL,MAAK,KAAA5S,OAAIoH,KAAKyL,MAAK,KAAA7S,OAAIoH,KAAK0L,OAC/C1L,KAAKsL,WAAWzS,SAClBmH,KAAKmD,SAAW,IAAJvK,OAAQoH,KAAKsL,WAAWpF,KAAK,OAEpClG,KAAKmD,OACd,GAAC,CAAAE,IAAA,WAAAvL,MAED,WACE,OAAOkI,KAAKmD,OACd,GAAC,CAAAE,IAAA,UAAAvL,MAED,SAASqU,GAEP,GADAnJ,EAAM,iBAAkBhD,KAAKmD,QAASnD,KAAK4C,QAASuJ,KAC9CA,aAAiBrI,GAAS,CAC9B,GAAqB,kBAAVqI,GAAsBA,IAAUnM,KAAKmD,QAC9C,OAAO,EAETgJ,EAAQ,IAAIrI,EAAOqI,EAAOnM,KAAK4C,QACjC,CAEA,OAAIuJ,EAAMhJ,UAAYnD,KAAKmD,QAClB,EAGFnD,KAAKoM,YAAYD,IAAUnM,KAAKqM,WAAWF,EACpD,GAAC,CAAA9I,IAAA,cAAAvL,MAED,SAAaqU,GAKX,OAJMA,aAAiBrI,IACrBqI,EAAQ,IAAIrI,EAAOqI,EAAOnM,KAAK4C,UAI/BkJ,EAAmB9L,KAAKwL,MAAOW,EAAMX,QACrCM,EAAmB9L,KAAKyL,MAAOU,EAAMV,QACrCK,EAAmB9L,KAAK0L,MAAOS,EAAMT,MAEzC,GAAC,CAAArI,IAAA,aAAAvL,MAED,SAAYqU,GAMV,GALMA,aAAiBrI,IACrBqI,EAAQ,IAAIrI,EAAOqI,EAAOnM,KAAK4C,UAI7B5C,KAAKsL,WAAWzS,SAAWsT,EAAMb,WAAWzS,OAC9C,OAAQ,EACH,IAAKmH,KAAKsL,WAAWzS,QAAUsT,EAAMb,WAAWzS,OACrD,OAAO,EACF,IAAKmH,KAAKsL,WAAWzS,SAAWsT,EAAMb,WAAWzS,OACtD,OAAO,EAGT,IAAIO,EAAI,EACR,EAAG,CACD,IAAMkT,EAAItM,KAAKsL,WAAWlS,GACpBrB,EAAIoU,EAAMb,WAAWlS,GAE3B,GADA4J,EAAM,qBAAsB5J,EAAGkT,EAAGvU,QACxB4I,IAAN2L,QAAyB3L,IAAN5I,EACrB,OAAO,EACF,QAAU4I,IAAN5I,EACT,OAAO,EACF,QAAU4I,IAAN2L,EACT,OAAQ,EACH,GAAIA,IAAMvU,EAGf,OAAO+T,EAAmBQ,EAAGvU,EAEjC,SAAWqB,EACb,GAAC,CAAAiK,IAAA,eAAAvL,MAED,SAAcqU,GACNA,aAAiBrI,IACrBqI,EAAQ,IAAIrI,EAAOqI,EAAOnM,KAAK4C,UAGjC,IAAIxJ,EAAI,EACR,EAAG,CACD,IAAMkT,EAAItM,KAAKkM,MAAM9S,GACfrB,EAAIoU,EAAMD,MAAM9S,GAEtB,GADA4J,EAAM,qBAAsB5J,EAAGkT,EAAGvU,QACxB4I,IAAN2L,QAAyB3L,IAAN5I,EACrB,OAAO,EACF,QAAU4I,IAAN5I,EACT,OAAO,EACF,QAAU4I,IAAN2L,EACT,OAAQ,EACH,GAAIA,IAAMvU,EAGf,OAAO+T,EAAmBQ,EAAGvU,EAEjC,SAAWqB,EACb,GAGA,CAAAiK,IAAA,MAAAvL,MACA,SAAKyU,EAASC,GACZ,OAAQD,GACN,IAAK,WACHvM,KAAKsL,WAAWzS,OAAS,EACzBmH,KAAK0L,MAAQ,EACb1L,KAAKyL,MAAQ,EACbzL,KAAKwL,QACLxL,KAAKyM,IAAI,MAAOD,GAChB,MACF,IAAK,WACHxM,KAAKsL,WAAWzS,OAAS,EACzBmH,KAAK0L,MAAQ,EACb1L,KAAKyL,QACLzL,KAAKyM,IAAI,MAAOD,GAChB,MACF,IAAK,WAIHxM,KAAKsL,WAAWzS,OAAS,EACzBmH,KAAKyM,IAAI,QAASD,GAClBxM,KAAKyM,IAAI,MAAOD,GAChB,MAGF,IAAK,aAC4B,IAA3BxM,KAAKsL,WAAWzS,QAClBmH,KAAKyM,IAAI,QAASD,GAEpBxM,KAAKyM,IAAI,MAAOD,GAChB,MAEF,IAAK,QAMc,IAAfxM,KAAKyL,OACU,IAAfzL,KAAK0L,OACsB,IAA3B1L,KAAKsL,WAAWzS,QAEhBmH,KAAKwL,QAEPxL,KAAKyL,MAAQ,EACbzL,KAAK0L,MAAQ,EACb1L,KAAKsL,WAAa,GAClB,MACF,IAAK,QAKgB,IAAftL,KAAK0L,OAA0C,IAA3B1L,KAAKsL,WAAWzS,QACtCmH,KAAKyL,QAEPzL,KAAK0L,MAAQ,EACb1L,KAAKsL,WAAa,GAClB,MACF,IAAK,QAK4B,IAA3BtL,KAAKsL,WAAWzS,QAClBmH,KAAK0L,QAEP1L,KAAKsL,WAAa,GAClB,MAGF,IAAK,MACH,GAA+B,IAA3BtL,KAAKsL,WAAWzS,OAClBmH,KAAKsL,WAAa,CAAC,OACd,CAEL,IADA,IAAIlS,EAAI4G,KAAKsL,WAAWzS,SACfO,GAAK,GACsB,kBAAvB4G,KAAKsL,WAAWlS,KACzB4G,KAAKsL,WAAWlS,KAChBA,GAAK,IAGE,IAAPA,GAEF4G,KAAKsL,WAAW7R,KAAK,EAEzB,CACI+S,IAGyD,IAAvDV,EAAmB9L,KAAKsL,WAAW,GAAIkB,GACrCE,MAAM1M,KAAKsL,WAAW,MACxBtL,KAAKsL,WAAa,CAACkB,EAAY,IAGjCxM,KAAKsL,WAAa,CAACkB,EAAY,IAGnC,MAEF,QACE,MAAM,IAAIG,MAAM,+BAAD/T,OAAgC2T,IAInD,OAFAvM,KAAKgF,SACLhF,KAAK8E,IAAM9E,KAAKmD,QACTnD,IACT,KAAC8D,CAAA,CArRS,GAwRZa,EAAOpM,QAAUuL,C,wBC9RjB,IAAMb,EAAQrL,EAAQ,OAKtB+M,EAAOpM,QAJO,SAAC4K,EAASP,GACtB,IAAM+C,EAAI1C,EAAME,EAAQiC,OAAO5I,QAAQ,SAAU,IAAKoG,GACtD,OAAO+C,EAAIA,EAAExC,QAAU,IACzB,C,wBCJA,IAAMyJ,EAAKhV,EAAQ,OACbiV,EAAMjV,EAAQ,OACdkV,EAAKlV,EAAQ,OACbmV,EAAMnV,EAAQ,OACdoV,EAAKpV,EAAQ,OACbqV,EAAMrV,EAAQ,OA8CpB+M,EAAOpM,QA5CK,SAAC+T,EAAGY,EAAInV,EAAGgL,GACrB,OAAQmK,GACN,IAAK,MAOH,MANiB,kBAANZ,IACTA,EAAIA,EAAEnJ,SAES,kBAANpL,IACTA,EAAIA,EAAEoL,SAEDmJ,IAAMvU,EAEf,IAAK,MAOH,MANiB,kBAANuU,IACTA,EAAIA,EAAEnJ,SAES,kBAANpL,IACTA,EAAIA,EAAEoL,SAEDmJ,IAAMvU,EAEf,IAAK,GACL,IAAK,IACL,IAAK,KACH,OAAO6U,EAAGN,EAAGvU,EAAGgL,GAElB,IAAK,KACH,OAAO8J,EAAIP,EAAGvU,EAAGgL,GAEnB,IAAK,IACH,OAAO+J,EAAGR,EAAGvU,EAAGgL,GAElB,IAAK,KACH,OAAOgK,EAAIT,EAAGvU,EAAGgL,GAEnB,IAAK,IACH,OAAOiK,EAAGV,EAAGvU,EAAGgL,GAElB,IAAK,KACH,OAAOkK,EAAIX,EAAGvU,EAAGgL,GAEnB,QACE,MAAM,IAAIc,UAAU,qBAADjL,OAAsBsU,IAE/C,C,wBClDA,IAAMpJ,EAASlM,EAAQ,OACjBqL,EAAQrL,EAAQ,OACtBgN,EAAkBhN,EAAQ,OAAlB2L,EAAEqB,EAAFrB,GAAIC,EAACoB,EAADpB,EAiDZmB,EAAOpM,QA/CQ,SAAC4K,EAASP,GACvB,GAAIO,aAAmBW,EACrB,OAAOX,EAOT,GAJuB,kBAAZA,IACTA,EAAUpG,OAAOoG,IAGI,kBAAZA,EACT,OAAO,KAKT,IAAIS,EAAQ,KACZ,IAHAhB,EAAUA,GAAW,CAAC,GAGTuK,IAEN,CAUL,IADA,IAAIjL,GACIA,EAAOqB,EAAGC,EAAE4J,WAAWC,KAAKlK,OAC9BS,GAASA,EAAM0J,MAAQ1J,EAAM,GAAG/K,SAAWsK,EAAQtK,SAElD+K,GACC1B,EAAKoL,MAAQpL,EAAK,GAAGrJ,SAAW+K,EAAM0J,MAAQ1J,EAAM,GAAG/K,SAC3D+K,EAAQ1B,GAEVqB,EAAGC,EAAE4J,WAAWG,UAAYrL,EAAKoL,MAAQpL,EAAK,GAAGrJ,OAASqJ,EAAK,GAAGrJ,OAGpE0K,EAAGC,EAAE4J,WAAWG,WAAa,CAC/B,MAtBE3J,EAAQT,EAAQS,MAAML,EAAGC,EAAEgK,SAwB7B,OAAc,OAAV5J,EACK,KAGFX,EAAM,GAADrK,OAAIgL,EAAM,GAAE,KAAAhL,OAAIgL,EAAM,IAAM,IAAG,KAAAhL,OAAIgL,EAAM,IAAM,KAAOhB,EACpE,C,wBClDA,IAAMkB,EAASlM,EAAQ,OAMvB+M,EAAOpM,QALc,SAAC+T,EAAGvU,EAAGgL,GAC1B,IAAM0K,EAAW,IAAI3J,EAAOwI,EAAGvJ,GACzB2K,EAAW,IAAI5J,EAAO/L,EAAGgL,GAC/B,OAAO0K,EAASE,QAAQD,IAAaD,EAASG,aAAaF,EAC7D,C,wBCLA,IAAMC,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADc,SAAC+T,EAAGvU,GAAC,OAAK4V,EAAQrB,EAAGvU,GAAG,EAAK,C,wBCDlD,IAAM+L,EAASlM,EAAQ,OAIvB+M,EAAOpM,QAHS,SAAC+T,EAAGvU,EAAGgL,GAAK,OAC1B,IAAIe,EAAOwI,EAAGvJ,GAAO4K,QAAQ,IAAI7J,EAAO/L,EAAGgL,GAAO,C,wBCFpD,IAAME,EAAQrL,EAAQ,OAChBgV,EAAKhV,EAAQ,OAqBnB+M,EAAOpM,QAnBM,SAACsV,EAAUC,GACtB,GAAIlB,EAAGiB,EAAUC,GACf,OAAO,KAEP,IAAMC,EAAK9K,EAAM4K,GACXG,EAAK/K,EAAM6K,GACXG,EAASF,EAAGzC,WAAWzS,QAAUmV,EAAG1C,WAAWzS,OAC/CqV,EAASD,EAAS,MAAQ,GAC1BE,EAAgBF,EAAS,aAAe,GAC9C,IAAK,IAAM5K,KAAO0K,EAChB,IAAY,UAAR1K,GAA2B,UAARA,GAA2B,UAARA,IACpC0K,EAAG1K,KAAS2K,EAAG3K,GACjB,OAAO6K,EAAS7K,EAItB,OAAO8K,CAEX,C,wBCrBA,IAAMR,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADI,SAAC+T,EAAGvU,EAAGgL,GAAK,OAA8B,IAAzB4K,EAAQrB,EAAGvU,EAAGgL,EAAY,C,wBCDtD,IAAM4K,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADI,SAAC+T,EAAGvU,EAAGgL,GAAK,OAAK4K,EAAQrB,EAAGvU,EAAGgL,GAAS,CAAC,C,wBCDpD,IAAM4K,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADK,SAAC+T,EAAGvU,EAAGgL,GAAK,OAAK4K,EAAQrB,EAAGvU,EAAGgL,IAAU,CAAC,C,wBCDtD,IAAMe,EAASlM,EAAQ,OAiBvB+M,EAAOpM,QAfK,SAAC4K,EAASoJ,EAAS3J,EAAS4J,GACb,kBAAb5J,IACV4J,EAAa5J,EACbA,OAAUjC,GAGZ,IACE,OAAO,IAAImD,EACTX,aAAmBW,EAASX,EAAQA,QAAUA,EAC9CP,GACA6J,IAAIF,EAASC,GAAYrJ,OAC7B,CAAE,MAAOY,GACP,OAAO,IACT,CACF,C,wBChBA,IAAM4J,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADI,SAAC+T,EAAGvU,EAAGgL,GAAK,OAAK4K,EAAQrB,EAAGvU,EAAGgL,GAAS,CAAC,C,wBCDpD,IAAM4K,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADK,SAAC+T,EAAGvU,EAAGgL,GAAK,OAAK4K,EAAQrB,EAAGvU,EAAGgL,IAAU,CAAC,C,wBCDtD,IAAMe,EAASlM,EAAQ,OAEvB+M,EAAOpM,QADO,SAAC+T,EAAGvJ,GAAK,OAAK,IAAIe,EAAOwI,EAAGvJ,GAAOyI,KAAK,C,wBCDtD,IAAM1H,EAASlM,EAAQ,OAEvB+M,EAAOpM,QADO,SAAC+T,EAAGvJ,GAAK,OAAK,IAAIe,EAAOwI,EAAGvJ,GAAO0I,KAAK,C,wBCDtD,IAAMkC,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADK,SAAC+T,EAAGvU,EAAGgL,GAAK,OAA8B,IAAzB4K,EAAQrB,EAAGvU,EAAGgL,EAAY,C,wBCDvD,IAAQ4I,EAAe/T,EAAQ,OAAvB+T,WACRE,EAAkBjU,EAAQ,OAAlB2L,EAAEsI,EAAFtI,GAAIC,EAACqI,EAADrI,EACNM,EAASlM,EAAQ,OAEjBkL,EAAelL,EAAQ,OA4B7B+M,EAAOpM,QA3BO,SAAC4K,EAASP,GAGtB,GAFAA,EAAUE,EAAaF,GAEnBO,aAAmBW,EACrB,OAAOX,EAGT,GAAuB,kBAAZA,EACT,OAAO,KAGT,GAAIA,EAAQtK,OAAS8S,EACnB,OAAO,KAIT,KADU/I,EAAQG,MAAQQ,EAAGC,EAAEuI,OAASxI,EAAGC,EAAEwI,OACtC7H,KAAKhB,GACV,OAAO,KAGT,IACE,OAAO,IAAIW,EAAOX,EAASP,EAC7B,CAAE,MAAOmB,GACP,OAAO,IACT,CACF,C,wBC9BA,IAAMD,EAASlM,EAAQ,OAEvB+M,EAAOpM,QADO,SAAC+T,EAAGvJ,GAAK,OAAK,IAAIe,EAAOwI,EAAGvJ,GAAO2I,KAAK,C,wBCDtD,IAAMzI,EAAQrL,EAAQ,OAKtB+M,EAAOpM,QAJY,SAAC4K,EAASP,GAC3B,IAAMwL,EAASnL,EAAME,EAASP,GAC9B,OAAQwL,GAAUA,EAAO9C,WAAWzS,OAAUuV,EAAO9C,WAAa,IACpE,C,uBCJA,IAAMqC,EAAU/V,EAAQ,OAExB+M,EAAOpM,QADU,SAAC+T,EAAGvU,EAAGgL,GAAK,OAAK4K,EAAQ5V,EAAGuU,EAAGvJ,EAAM,C,uBCDtD,IAAM6K,EAAehW,EAAQ,OAE7B+M,EAAOpM,QADO,SAACoJ,EAAMoB,GAAK,OAAKpB,EAAK0M,MAAK,SAAC/B,EAAGvU,GAAC,OAAK6V,EAAa7V,EAAGuU,EAAGvJ,EAAM,GAAC,C,wBCD7E,IAAMmB,EAAQtM,EAAQ,OAStB+M,EAAOpM,QARW,SAAC4K,EAAS0B,EAAOjC,GACjC,IACEiC,EAAQ,IAAIX,EAAMW,EAAOjC,EAC3B,CAAE,MAAOmB,GACP,OAAO,CACT,CACA,OAAOc,EAAMV,KAAKhB,EACpB,C,uBCRA,IAAMyK,EAAehW,EAAQ,OAE7B+M,EAAOpM,QADM,SAACoJ,EAAMoB,GAAK,OAAKpB,EAAK0M,MAAK,SAAC/B,EAAGvU,GAAC,OAAK6V,EAAatB,EAAGvU,EAAGgL,EAAM,GAAC,C,wBCD5E,IAAME,EAAQrL,EAAQ,OAKtB+M,EAAOpM,QAJO,SAAC4K,EAASP,GACtB,IAAM0L,EAAIrL,EAAME,EAASP,GACzB,OAAO0L,EAAIA,EAAEnL,QAAU,IACzB,C,wBCHA,IAAMoL,EAAa3W,EAAQ,OACrB4W,EAAY5W,EAAQ,OACpBkM,EAASlM,EAAQ,OACjB6W,EAAc7W,EAAQ,OACtBqL,EAAQrL,EAAQ,OAChB8W,EAAQ9W,EAAQ,OAChB+W,EAAQ/W,EAAQ,OAChB6U,EAAM7U,EAAQ,OACdgX,EAAOhX,EAAQ,OACf4T,EAAQ5T,EAAQ,OAChB6T,EAAQ7T,EAAQ,OAChB8T,EAAQ9T,EAAQ,OAChB0T,EAAa1T,EAAQ,OACrB+V,EAAU/V,EAAQ,OAClBiX,EAAWjX,EAAQ,MACnBkX,EAAelX,EAAQ,OACvBgW,EAAehW,EAAQ,OACvByW,EAAOzW,EAAQ,MACfmX,EAAQnX,EAAQ,MAChBkV,EAAKlV,EAAQ,OACboV,EAAKpV,EAAQ,OACbgV,EAAKhV,EAAQ,OACbiV,EAAMjV,EAAQ,OACdmV,EAAMnV,EAAQ,OACdqV,EAAMrV,EAAQ,OACdoM,EAAMpM,EAAQ,OACdoX,EAASpX,EAAQ,OACjB8K,EAAa9K,EAAQ,OACrBsM,EAAQtM,EAAQ,OAChBqX,EAAYrX,EAAQ,OACpBsX,EAAgBtX,EAAQ,OACxBuX,EAAgBvX,EAAQ,OACxBwX,EAAgBxX,EAAQ,OACxByX,EAAazX,EAAQ,OACrB0X,EAAa1X,EAAQ,OACrB2X,EAAU3X,EAAQ,OAClB4X,EAAM5X,EAAQ,MACd6X,EAAM7X,EAAQ,OACd0Q,EAAa1Q,EAAQ,OACrB8X,EAAgB9X,EAAQ,OACxB+X,EAAS/X,EAAQ,OACvB+M,EAAOpM,QAAU,CACf0K,MAAAA,EACAyL,MAAAA,EACAC,MAAAA,EACAlC,IAAAA,EACAmC,KAAAA,EACApD,MAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAJ,WAAAA,EACAqC,QAAAA,EACAkB,SAAAA,EACAC,aAAAA,EACAlB,aAAAA,EACAS,KAAAA,EACAU,MAAAA,EACAjC,GAAAA,EACAE,GAAAA,EACAJ,GAAAA,EACAC,IAAAA,EACAE,IAAAA,EACAE,IAAAA,EACAjJ,IAAAA,EACAgL,OAAAA,EACAtM,WAAAA,EACAwB,MAAAA,EACA+K,UAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAC,QAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAnH,WAAAA,EACAoH,cAAAA,EACAC,OAAAA,EACA7L,OAAAA,EACAP,GAAIgL,EAAWhL,GACfqM,IAAKrB,EAAWqB,IAChBC,OAAQtB,EAAW/K,EACnBsM,oBAAqBtB,EAAUsB,oBAC/BhE,mBAAoB2C,EAAY3C,mBAChCiE,oBAAqBtB,EAAYsB,oB,oBCpFnC,IAGMnE,EAAmBoE,OAAOpE,kBACL,iBAK3BjH,EAAOpM,QAAU,CACfuX,oBAV0B,QAW1BnE,WATiB,IAUjBC,iBAAAA,EACAqE,0BANgC,G,4BCT5BjN,EACe,kB,SAEnBkN,CAAAA,SAAAA,aAAAA,WAAAA,OAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,YACZ,cAAchM,KAAK+L,CAAAA,SAAAA,aAAAA,WAAAA,OAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,YAC7B,mBAAAC,EAAAC,EAAAC,UAAAzX,OAAI0X,EAAI,IAAA/R,MAAA6R,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJD,EAAIC,GAAAF,UAAAE,GAAA,OAAKJ,EAAAjT,SAAQC,MAAK4D,MAAAoP,EAAA,CAAC,UAAQxX,OAAK2X,GAAK,EAC7C,WAAO,EAEX5L,EAAOpM,QAAUyK,C,oBCRjB,IAAMyN,EAAU,WACV3E,EAAqB,SAACQ,EAAGvU,GAC7B,IAAM2Y,EAAOD,EAAQtM,KAAKmI,GACpBqE,EAAOF,EAAQtM,KAAKpM,GAO1B,OALI2Y,GAAQC,IACVrE,GAAKA,EACLvU,GAAKA,GAGAuU,IAAMvU,EAAI,EACZ2Y,IAASC,GAAS,EAClBA,IAASD,EAAQ,EAClBpE,EAAIvU,GAAK,EACT,CACN,EAIA4M,EAAOpM,QAAU,CACfuT,mBAAAA,EACAiE,oBAJ0B,SAACzD,EAAGvU,GAAC,OAAK+T,EAAmB/T,EAAGuU,EAAE,E,oBCf9D,IAAMsE,EAAO,CAAC,oBAAqB,QAAS,OAQ5CjM,EAAOpM,QAPc,SAAAqK,GAAO,OACzBA,EACoB,kBAAZA,EAAuB,CAAEG,OAAO,GACvC6N,EAAKhS,QAAO,SAAAiS,GAAC,OAAIjO,EAAQiO,EAAE,IAAEC,QAAO,SAACC,EAAGF,GAExC,OADAE,EAAEF,IAAK,EACAE,CACT,GAAG,CAAC,GALO,CAAC,CAKN,C,wBCTR,IAAQd,EAA8BrY,EAAQ,OAAtCqY,0BACFjN,EAAQpL,EAAQ,OAIhB2L,GAHNhL,EAAUoM,EAAOpM,QAAU,CAAC,GAGTgL,GAAK,GAClBqM,EAAMrX,EAAQqX,IAAM,GACpBpM,EAAIjL,EAAQiL,EAAI,CAAC,EACnBwN,EAAI,EAEFC,EAAc,SAACC,EAAMpZ,EAAOqZ,GAChC,IAAM7D,EAAQ0D,IACdhO,EAAMkO,EAAM5D,EAAOxV,GACnB0L,EAAE0N,GAAQ5D,EACVsC,EAAItC,GAASxV,EACbyL,EAAG+J,GAAS,IAAI8D,OAAOtZ,EAAOqZ,EAAW,SAAMxQ,EACjD,EAQAsQ,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,UAMtCA,EAAY,uBAAwB,8BAKpCA,EAAY,cAAe,IAAArY,OAAIgX,EAAIpM,EAAE6N,mBAAkB,YAAAzY,OAChCgX,EAAIpM,EAAE6N,mBAAkB,QAAM,IAAAzY,OAC9BgX,EAAIpM,EAAE6N,mBAAkB,MAE/CJ,EAAY,mBAAoB,IAAArY,OAAIgX,EAAIpM,EAAE8N,wBAAuB,YAAA1Y,OACrCgX,EAAIpM,EAAE8N,wBAAuB,QAAM,IAAA1Y,OACnCgX,EAAIpM,EAAE8N,wBAAuB,MAKzDL,EAAY,uBAAwB,MAAFrY,OAAQgX,EAAIpM,EAAE6N,mBAAkB,KAAAzY,OAC9DgX,EAAIpM,EAAE+N,sBAAqB,MAE/BN,EAAY,4BAA6B,MAAFrY,OAAQgX,EAAIpM,EAAE8N,wBAAuB,KAAA1Y,OACxEgX,EAAIpM,EAAE+N,sBAAqB,MAM/BN,EAAY,aAAc,QAAFrY,OAAUgX,EAAIpM,EAAEgO,sBAAqB,UAAA5Y,OACpDgX,EAAIpM,EAAEgO,sBAAqB,SAEpCP,EAAY,kBAAmB,SAAFrY,OAAWgX,EAAIpM,EAAEiO,2BAA0B,UAAA7Y,OAC/DgX,EAAIpM,EAAEiO,2BAA0B,SAKzCR,EAAY,kBAAmB,iBAM/BA,EAAY,QAAS,UAAFrY,OAAYgX,EAAIpM,EAAEkO,iBAAgB,UAAA9Y,OAC5CgX,EAAIpM,EAAEkO,iBAAgB,SAW/BT,EAAY,YAAa,KAAFrY,OAAOgX,EAAIpM,EAAEmO,cAAY/Y,OAC7CgX,EAAIpM,EAAEoO,YAAW,KAAAhZ,OAClBgX,EAAIpM,EAAEqO,OAAM,MAEdZ,EAAY,OAAQ,IAAFrY,OAAMgX,EAAIpM,EAAEsO,WAAU,MAKxCb,EAAY,aAAc,WAAFrY,OAAagX,EAAIpM,EAAEuO,mBAAiBnZ,OACzDgX,EAAIpM,EAAEwO,iBAAgB,KAAApZ,OACvBgX,EAAIpM,EAAEqO,OAAM,MAEdZ,EAAY,QAAS,IAAFrY,OAAMgX,EAAIpM,EAAEyO,YAAW,MAE1ChB,EAAY,OAAQ,gBAKpBA,EAAY,wBAAyB,GAAFrY,OAAKgX,EAAIpM,EAAE8N,wBAAuB,aACrEL,EAAY,mBAAoB,GAAFrY,OAAKgX,EAAIpM,EAAE6N,mBAAkB,aAE3DJ,EAAY,cAAe,YAAArY,OAAYgX,EAAIpM,EAAE0O,kBAAiB,eAAAtZ,OACjCgX,EAAIpM,EAAE0O,kBAAiB,KAAG,UAAAtZ,OAC1BgX,EAAIpM,EAAE0O,kBAAiB,KAAG,MAAAtZ,OAC9BgX,EAAIpM,EAAEoO,YAAW,MAAAhZ,OACrBgX,EAAIpM,EAAEqO,OAAM,KAAG,QAGpCZ,EAAY,mBAAoB,YAAArY,OAAYgX,EAAIpM,EAAE2O,uBAAsB,eAAAvZ,OACtCgX,EAAIpM,EAAE2O,uBAAsB,KAAG,UAAAvZ,OAC/BgX,EAAIpM,EAAE2O,uBAAsB,KAAG,MAAAvZ,OACnCgX,EAAIpM,EAAEwO,iBAAgB,MAAApZ,OAC1BgX,EAAIpM,EAAEqO,OAAM,KAAG,QAGzCZ,EAAY,SAAU,IAAFrY,OAAMgX,EAAIpM,EAAE4O,MAAK,QAAAxZ,OAAOgX,EAAIpM,EAAE6O,aAAY,MAC9DpB,EAAY,cAAe,IAAFrY,OAAMgX,EAAIpM,EAAE4O,MAAK,QAAAxZ,OAAOgX,EAAIpM,EAAE8O,kBAAiB,MAIxErB,EAAY,SAAU,GAAArY,OAAG,qBACFA,OAAGqX,EAAyB,sBAAArX,OACrBqX,EAAyB,QAAM,gBAAArX,OAC/BqX,EAAyB,QAAM,gBAE7DgB,EAAY,YAAarB,EAAIpM,EAAEgK,SAAS,GAIxCyD,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAAFrY,OAAWgX,EAAIpM,EAAE+O,WAAU,SAAQ,GAC1Dha,EAAQ0O,iBAAmB,MAE3BgK,EAAY,QAAS,IAAFrY,OAAMgX,EAAIpM,EAAE+O,YAAU3Z,OAAGgX,EAAIpM,EAAE6O,aAAY,MAC9DpB,EAAY,aAAc,IAAFrY,OAAMgX,EAAIpM,EAAE+O,YAAU3Z,OAAGgX,EAAIpM,EAAE8O,kBAAiB,MAIxErB,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAAFrY,OAAWgX,EAAIpM,EAAEgP,WAAU,SAAQ,GAC1Dja,EAAQ4O,iBAAmB,MAE3B8J,EAAY,QAAS,IAAFrY,OAAMgX,EAAIpM,EAAEgP,YAAU5Z,OAAGgX,EAAIpM,EAAE6O,aAAY,MAC9DpB,EAAY,aAAc,IAAFrY,OAAMgX,EAAIpM,EAAEgP,YAAU5Z,OAAGgX,EAAIpM,EAAE8O,kBAAiB,MAGxErB,EAAY,kBAAmB,IAAFrY,OAAMgX,EAAIpM,EAAE4O,MAAK,SAAAxZ,OAAQgX,EAAIpM,EAAEyO,YAAW,UACvEhB,EAAY,aAAc,IAAFrY,OAAMgX,EAAIpM,EAAE4O,MAAK,SAAAxZ,OAAQgX,EAAIpM,EAAEsO,WAAU,UAIjEb,EAAY,iBAAkB,SAAFrY,OAAWgX,EAAIpM,EAAE4O,MAAK,SAAAxZ,OAC1CgX,EAAIpM,EAAEyO,YAAW,KAAArZ,OAAIgX,EAAIpM,EAAE6O,aAAY,MAAK,GACpD9Z,EAAQuO,sBAAwB,SAMhCmK,EAAY,cAAe,SAAArY,OAASgX,EAAIpM,EAAE6O,aAAY,iBACxB,IAAAzZ,OACPgX,EAAIpM,EAAE6O,aAAY,KAAG,SAG5CpB,EAAY,mBAAoB,SAAArY,OAASgX,EAAIpM,EAAE8O,kBAAiB,iBAC7B,IAAA1Z,OACPgX,EAAIpM,EAAE8O,kBAAiB,KAAG,SAItDrB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,6BACpBA,EAAY,UAAW,8B,qCCnLvB,IAAApO,EAAAjL,EAAAA,OAAAA,QAAAwL,EAAAxL,EAAAA,OAAAA,QACM6a,EAAU7a,EAAQ,OAElB8a,EAAMjQ,OAAO,OACbkQ,EAASlQ,OAAO,UAChBmQ,EAAoBnQ,OAAO,oBAC3BoQ,EAAcpQ,OAAO,cACrBqQ,EAAUrQ,OAAO,UACjBsQ,EAAUtQ,OAAO,WACjBuQ,EAAoBvQ,OAAO,kBAC3BwQ,EAAWxQ,OAAO,WAClByQ,EAAQzQ,OAAO,SACf0Q,EAAoB1Q,OAAO,kBAE3B2Q,EAAc,WAAH,OAAS,CAAC,EAUrBC,EAAQ,WACZ,SAAAA,EAAazQ,GAOX,GAPoBC,EAAA,KAAAwQ,GACG,kBAAZzQ,IACTA,EAAU,CAAE4F,IAAK5F,IAEdA,IACHA,EAAU,CAAC,GAETA,EAAQ4F,MAA+B,kBAAhB5F,EAAQ4F,KAAoB5F,EAAQ4F,IAAM,GACnE,MAAM,IAAI3E,UAAU,qCAEV7D,KAAK0S,GAAO9P,EAAQ4F,KAAO8K,IAAvC,IAEMC,EAAK3Q,EAAQ/J,QAAUua,EAG7B,GAFApT,KAAK4S,GAAoC,oBAAPW,EAAqBH,EAAcG,EACrEvT,KAAK6S,GAAejQ,EAAQ4Q,QAAS,EACjC5Q,EAAQ6Q,QAAoC,kBAAnB7Q,EAAQ6Q,OACnC,MAAM,IAAI5P,UAAU,2BACtB7D,KAAK8S,GAAWlQ,EAAQ6Q,QAAU,EAClCzT,KAAK+S,GAAWnQ,EAAQ8Q,QACxB1T,KAAKgT,GAAqBpQ,EAAQ+Q,iBAAkB,EACpD3T,KAAKmT,GAAqBvQ,EAAQgR,iBAAkB,EACpD5T,KAAK6T,OACP,CA8MC,OA5MDzQ,EAAAiQ,EAAA,EAAAhQ,IAAA,MAAAqB,IAQA,WACE,OAAO1E,KAAK0S,EACd,EAAC3N,IATD,SAAS+O,GACP,GAAkB,kBAAPA,GAAmBA,EAAK,EACjC,MAAM,IAAIjQ,UAAU,qCAEtB7D,KAAK0S,GAAOoB,GAAMR,IAClBlO,EAAKpF,KACP,GAAC,CAAAqD,IAAA,aAAAqB,IAQD,WACE,OAAO1E,KAAK6S,EACd,EAAC9N,IALD,SAAgBgP,GACd/T,KAAK6S,KAAiBkB,CACxB,GAAC,CAAA1Q,IAAA,SAAAqB,IAYD,WACE,OAAO1E,KAAK8S,EACd,EAEA/N,IAXA,SAAYiP,GACV,GAAkB,kBAAPA,EACT,MAAM,IAAInQ,UAAU,wCAEtB7D,KAAK8S,GAAWkB,EAChB5O,EAAKpF,KACP,GAAC,CAAAqD,IAAA,mBAAAqB,IAoBD,WAA0B,OAAO1E,KAAK4S,EAAmB,EAAC7N,IAd1D,SAAsBkP,GAAI,IAAAlV,EAAA,KACN,oBAAPkV,IACTA,EAAKb,GAEHa,IAAOjU,KAAK4S,KACd5S,KAAK4S,GAAqBqB,EAC1BjU,KAAK2S,GAAU,EACf3S,KAAKiT,GAAUiB,SAAQ,SAAAC,GACrBA,EAAItb,OAASkG,EAAK6T,GAAmBuB,EAAIrc,MAAOqc,EAAI9Q,KACpDtE,EAAK4T,IAAWwB,EAAItb,MACtB,KAEFuM,EAAKpF,KACP,GAAC,CAAAqD,IAAA,SAAAqB,IAGD,WAAgB,OAAO1E,KAAK2S,EAAQ,GAAC,CAAAtP,IAAA,YAAAqB,IACrC,WAAmB,OAAO1E,KAAKiT,GAAUpa,MAAO,GAAC,CAAAwK,IAAA,WAAAvL,MAEjD,SAAUsc,EAAIC,GACZA,EAAQA,GAASrU,KACjB,IAAK,IAAIsU,EAAStU,KAAKiT,GAAUsB,KAAiB,OAAXD,GAAkB,CACvD,IAAME,EAAOF,EAAOE,KACpBC,EAAYzU,KAAMoU,EAAIE,EAAQD,GAC9BC,EAASE,CACX,CACF,GAAC,CAAAnR,IAAA,UAAAvL,MAED,SAASsc,EAAIC,GACXA,EAAQA,GAASrU,KACjB,IAAK,IAAIsU,EAAStU,KAAKiT,GAAU5Z,KAAiB,OAAXib,GAAkB,CACvD,IAAMpS,EAAOoS,EAAOpS,KACpBuS,EAAYzU,KAAMoU,EAAIE,EAAQD,GAC9BC,EAASpS,CACX,CACF,GAAC,CAAAmB,IAAA,OAAAvL,MAED,WACE,OAAOkI,KAAKiT,GAAUyB,UAAUxP,KAAI,SAAA2L,GAAC,OAAIA,EAAExN,GAAG,GAChD,GAAC,CAAAA,IAAA,SAAAvL,MAED,WACE,OAAOkI,KAAKiT,GAAUyB,UAAUxP,KAAI,SAAA2L,GAAC,OAAIA,EAAE/Y,KAAK,GAClD,GAAC,CAAAuL,IAAA,QAAAvL,MAED,WAAS,IAAAqO,EAAA,KACHnG,KAAK+S,IACL/S,KAAKiT,IACLjT,KAAKiT,GAAUpa,QACjBmH,KAAKiT,GAAUiB,SAAQ,SAAAC,GAAG,OAAIhO,EAAK4M,GAASoB,EAAI9Q,IAAK8Q,EAAIrc,MAAM,IAGjEkI,KAAKkT,GAAS,IAAI1L,IAClBxH,KAAKiT,GAAY,IAAIR,EACrBzS,KAAK2S,GAAU,CACjB,GAAC,CAAAtP,IAAA,OAAAvL,MAED,WAAQ,IAAA6c,EAAA,KACN,OAAO3U,KAAKiT,GAAU/N,KAAI,SAAAiP,GAAG,OAC3BS,EAAQD,EAAMR,IAAe,CAC3BtD,EAAGsD,EAAI9Q,IACPiL,EAAG6F,EAAIrc,MACPoF,EAAGiX,EAAIU,KAAOV,EAAIV,QAAU,GAC7B,IAAEiB,UAAU9V,QAAO,SAAAkW,GAAC,OAAIA,CAAC,GAC9B,GAAC,CAAAzR,IAAA,UAAAvL,MAED,WACE,OAAOkI,KAAKiT,EACd,GAAC,CAAA5P,IAAA,MAAAvL,MAED,SAAKuL,EAAKvL,EAAO2b,GAGf,IAFAA,EAASA,GAAUzT,KAAK8S,KAEQ,kBAAXW,EACnB,MAAM,IAAI5P,UAAU,2BAEtB,IAAMgR,EAAMpB,EAASxW,KAAK4X,MAAQ,EAC5BE,EAAM/U,KAAK4S,GAAmB9a,EAAOuL,GAE3C,GAAIrD,KAAKkT,GAAOtL,IAAIvE,GAAM,CACxB,GAAI0R,EAAM/U,KAAK0S,GAEb,OADAsC,EAAIhV,KAAMA,KAAKkT,GAAOxO,IAAIrB,KACnB,EAGT,IACM4R,EADOjV,KAAKkT,GAAOxO,IAAIrB,GACXvL,MAgBlB,OAZIkI,KAAK+S,KACF/S,KAAKgT,IACRhT,KAAK+S,GAAS1P,EAAK4R,EAAKnd,QAG5Bmd,EAAKJ,IAAMA,EACXI,EAAKxB,OAASA,EACdwB,EAAKnd,MAAQA,EACbkI,KAAK2S,IAAWoC,EAAME,EAAKpc,OAC3Boc,EAAKpc,OAASkc,EACd/U,KAAK0E,IAAIrB,GACT+B,EAAKpF,OACE,CACT,CAEA,IAAMmU,EAAM,IAAIe,EAAM7R,EAAKvL,EAAOid,EAAKF,EAAKpB,GAG5C,OAAIU,EAAItb,OAASmH,KAAK0S,IAChB1S,KAAK+S,IACP/S,KAAK+S,GAAS1P,EAAKvL,IAEd,IAGTkI,KAAK2S,IAAWwB,EAAItb,OACpBmH,KAAKiT,GAAUkC,QAAQhB,GACvBnU,KAAKkT,GAAOnO,IAAI1B,EAAKrD,KAAKiT,GAAU5Z,MACpC+L,EAAKpF,OACE,EACT,GAAC,CAAAqD,IAAA,MAAAvL,MAED,SAAKuL,GACH,IAAKrD,KAAKkT,GAAOtL,IAAIvE,GAAM,OAAO,EAClC,IAAM8Q,EAAMnU,KAAKkT,GAAOxO,IAAIrB,GAAKvL,MACjC,OAAQ8c,EAAQ5U,KAAMmU,EACxB,GAAC,CAAA9Q,IAAA,MAAAvL,MAED,SAAKuL,GACH,OAAOqB,EAAI1E,KAAMqD,GAAK,EACxB,GAAC,CAAAA,IAAA,OAAAvL,MAED,SAAMuL,GACJ,OAAOqB,EAAI1E,KAAMqD,GAAK,EACxB,GAAC,CAAAA,IAAA,MAAAvL,MAED,WACE,IAAMsd,EAAOpV,KAAKiT,GAAUsB,KAC5B,OAAKa,GAGLJ,EAAIhV,KAAMoV,GACHA,EAAKtd,OAHH,IAIX,GAAC,CAAAuL,IAAA,MAAAvL,MAED,SAAKuL,GACH2R,EAAIhV,KAAMA,KAAKkT,GAAOxO,IAAIrB,GAC5B,GAAC,CAAAA,IAAA,OAAAvL,MAED,SAAMud,GAEJrV,KAAK6T,QAIL,IAFA,IAAMgB,EAAM5X,KAAK4X,MAERS,EAAID,EAAIxc,OAAS,EAAGyc,GAAK,EAAGA,IAAK,CACxC,IAAMnB,EAAMkB,EAAIC,GACVC,EAAYpB,EAAIjX,GAAK,EAC3B,GAAkB,IAAdqY,EAEFvV,KAAK+E,IAAIoP,EAAItD,EAAGsD,EAAI7F,OACjB,CACH,IAAMmF,EAAS8B,EAAYV,EAEvBpB,EAAS,GACXzT,KAAK+E,IAAIoP,EAAItD,EAAGsD,EAAI7F,EAAGmF,EAE3B,CACF,CACF,GAAC,CAAApQ,IAAA,QAAAvL,MAED,WAAS,IAAA0d,EAAA,KACPxV,KAAKkT,GAAOgB,SAAQ,SAACpc,EAAOuL,GAAG,OAAKqB,EAAI8Q,EAAMnS,GAAK,EAAM,GAC3D,KAACgQ,CAAA,CArOW,GAwOR3O,EAAM,SAAC+Q,EAAMpS,EAAKqS,GACtB,IAAMN,EAAOK,EAAKvC,GAAOxO,IAAIrB,GAC7B,GAAI+R,EAAM,CACR,IAAMjB,EAAMiB,EAAKtd,MACjB,GAAI8c,EAAQa,EAAMtB,IAEhB,GADAa,EAAIS,EAAML,IACLK,EAAK5C,GACR,YAEE6C,IACED,EAAKtC,KACPiC,EAAKtd,MAAM+c,IAAM5X,KAAK4X,OACxBY,EAAKxC,GAAU0C,YAAYP,IAG/B,OAAOjB,EAAIrc,KACb,CACF,EAEM8c,EAAU,SAACa,EAAMtB,GACrB,IAAKA,IAASA,EAAIV,SAAWgC,EAAK3C,GAChC,OAAO,EAET,IAAMlE,EAAO3R,KAAK4X,MAAQV,EAAIU,IAC9B,OAAOV,EAAIV,OAAS7E,EAAOuF,EAAIV,OAC3BgC,EAAK3C,IAAalE,EAAO6G,EAAK3C,EACpC,EAEM1N,EAAO,SAAAqQ,GACX,GAAIA,EAAK9C,GAAU8C,EAAK/C,GACtB,IAAK,IAAI4B,EAASmB,EAAKxC,GAAUsB,KAC/BkB,EAAK9C,GAAU8C,EAAK/C,IAAmB,OAAX4B,GAAkB,CAI9C,IAAME,EAAOF,EAAOE,KACpBQ,EAAIS,EAAMnB,GACVA,EAASE,CACX,CAEJ,EAEMQ,EAAM,SAACS,EAAML,GACjB,GAAIA,EAAM,CACR,IAAMjB,EAAMiB,EAAKtd,MACb2d,EAAK1C,IACP0C,EAAK1C,GAASoB,EAAI9Q,IAAK8Q,EAAIrc,OAE7B2d,EAAK9C,IAAWwB,EAAItb,OACpB4c,EAAKvC,GAAOrL,OAAOsM,EAAI9Q,KACvBoS,EAAKxC,GAAU2C,WAAWR,EAC5B,CACF,EAEMF,EAAK9R,GACT,SAAA8R,EAAa7R,EAAKvL,EAAOe,EAAQgc,EAAKpB,GAAQ5Q,EAAA,KAAAqS,GAC5ClV,KAAKqD,IAAMA,EACXrD,KAAKlI,MAAQA,EACbkI,KAAKnH,OAASA,EACdmH,KAAK6U,IAAMA,EACX7U,KAAKyT,OAASA,GAAU,CAC1B,IAGIgB,EAAc,SAACgB,EAAMrB,EAAIgB,EAAMf,GACnC,IAAIF,EAAMiB,EAAKtd,MACX8c,EAAQa,EAAMtB,KAChBa,EAAIS,EAAML,GACLK,EAAK5C,KACRsB,OAAMxT,IAENwT,GACFC,EAAGpV,KAAKqV,EAAOF,EAAIrc,MAAOqc,EAAI9Q,IAAKoS,EACvC,EAEA9Q,EAAOpM,QAAU8a,C,qCC7UL,IAAAwC,EAAAje,EAAAA,OAAAA,QACZ+M,EAAOpM,QAAU,SAAUka,GACzBA,EAAQlR,UAAUkB,OAAOqT,UAASD,IAAAE,MAAG,SAAAC,IAAA,IAAA1B,EAAA,OAAAuB,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAhU,MAAA,OAC1BoS,EAAStU,KAAK3G,KAAI,WAAEib,EAAM,CAAA4B,EAAAhU,KAAA,QACjC,OADiCgU,EAAAhU,KAAA,EAC3BoS,EAAOxc,MAAK,OADiBwc,EAASA,EAAOpS,KAAIgU,EAAAhU,KAAA,gCAAAgU,EAAAC,OAAA,GAAAH,EAAA,QAI7D,C,qCCDA,SAASvD,EAAS9Q,GAChB,IAAI8T,EAAOzV,KASX,GARMyV,aAAgBhD,IACpBgD,EAAO,IAAIhD,GAGbgD,EAAKlB,KAAO,KACZkB,EAAKpc,KAAO,KACZoc,EAAK5c,OAAS,EAEV8I,GAAgC,oBAAjBA,EAAKuS,QACtBvS,EAAKuS,SAAQ,SAAUe,GACrBQ,EAAKhc,KAAKwb,EACZ,SACK,GAAI3E,UAAUzX,OAAS,EAC5B,IAAK,IAAIO,EAAI,EAAGkc,EAAIhF,UAAUzX,OAAQO,EAAIkc,EAAGlc,IAC3Cqc,EAAKhc,KAAK6W,UAAUlX,IAIxB,OAAOqc,CACT,CAmVA,SAASW,EAAQX,EAAML,EAAMtd,GAC3B,IAAIue,EAAWjB,IAASK,EAAKpc,KAC3B,IAAIid,EAAKxe,EAAO,KAAMsd,EAAMK,GAC5B,IAAIa,EAAKxe,EAAOsd,EAAMA,EAAKlT,KAAMuT,GAWnC,OATsB,OAAlBY,EAASnU,OACXuT,EAAKlB,KAAO8B,GAEQ,OAAlBA,EAAS7B,OACXiB,EAAKpc,KAAOgd,GAGdZ,EAAK5c,SAEEwd,CACT,CAEA,SAAS5c,EAAMgc,EAAMR,GACnBQ,EAAKlB,KAAO,IAAI+B,EAAKrB,EAAMQ,EAAKlB,KAAM,KAAMkB,GACvCA,EAAKpc,OACRoc,EAAKpc,KAAOoc,EAAKlB,MAEnBkB,EAAK5c,QACP,CAEA,SAASsc,EAASM,EAAMR,GACtBQ,EAAKpc,KAAO,IAAIid,EAAKrB,EAAM,KAAMQ,EAAKpc,KAAMoc,GACvCA,EAAKlB,OACRkB,EAAKlB,KAAOkB,EAAKpc,MAEnBoc,EAAK5c,QACP,CAEA,SAASyd,EAAMxe,EAAO0c,EAAMtS,EAAMP,GAChC,KAAM3B,gBAAgBsW,GACpB,OAAO,IAAIA,EAAKxe,EAAO0c,EAAMtS,EAAMP,GAGrC3B,KAAK2B,KAAOA,EACZ3B,KAAKlI,MAAQA,EAET0c,GACFA,EAAKtS,KAAOlC,KACZA,KAAKwU,KAAOA,GAEZxU,KAAKwU,KAAO,KAGVtS,GACFA,EAAKsS,KAAOxU,KACZA,KAAKkC,KAAOA,GAEZlC,KAAKkC,KAAO,IAEhB,CAnaAyC,EAAOpM,QAAUka,EAEjBA,EAAQ6D,KAAOA,EACf7D,EAAQ8D,OAAS9D,EAyBjBA,EAAQlR,UAAUqU,WAAa,SAAUR,GACvC,GAAIA,EAAKzT,OAAS3B,KAChB,MAAM,IAAI2M,MAAM,oDAGlB,IAAIzK,EAAOkT,EAAKlT,KACZsS,EAAOY,EAAKZ,KAsBhB,OApBItS,IACFA,EAAKsS,KAAOA,GAGVA,IACFA,EAAKtS,KAAOA,GAGVkT,IAASpV,KAAK3G,OAChB2G,KAAK3G,KAAO6I,GAEVkT,IAASpV,KAAKuU,OAChBvU,KAAKuU,KAAOC,GAGdY,EAAKzT,KAAK9I,SACVuc,EAAKlT,KAAO,KACZkT,EAAKZ,KAAO,KACZY,EAAKzT,KAAO,KAELO,CACT,EAEAuQ,EAAQlR,UAAUoU,YAAc,SAAUP,GACxC,GAAIA,IAASpV,KAAK3G,KAAlB,CAII+b,EAAKzT,MACPyT,EAAKzT,KAAKiU,WAAWR,GAGvB,IAAI/b,EAAO2G,KAAK3G,KAChB+b,EAAKzT,KAAO3B,KACZoV,EAAKlT,KAAO7I,EACRA,IACFA,EAAKmb,KAAOY,GAGdpV,KAAK3G,KAAO+b,EACPpV,KAAKuU,OACRvU,KAAKuU,KAAOa,GAEdpV,KAAKnH,QAjBL,CAkBF,EAEA4Z,EAAQlR,UAAUiV,SAAW,SAAUpB,GACrC,GAAIA,IAASpV,KAAKuU,KAAlB,CAIIa,EAAKzT,MACPyT,EAAKzT,KAAKiU,WAAWR,GAGvB,IAAIb,EAAOvU,KAAKuU,KAChBa,EAAKzT,KAAO3B,KACZoV,EAAKZ,KAAOD,EACRA,IACFA,EAAKrS,KAAOkT,GAGdpV,KAAKuU,KAAOa,EACPpV,KAAK3G,OACR2G,KAAK3G,KAAO+b,GAEdpV,KAAKnH,QAjBL,CAkBF,EAEA4Z,EAAQlR,UAAU9H,KAAO,WACvB,IAAK,IAAIL,EAAI,EAAGkc,EAAIhF,UAAUzX,OAAQO,EAAIkc,EAAGlc,IAC3CK,EAAKuG,KAAMsQ,UAAUlX,IAEvB,OAAO4G,KAAKnH,MACd,EAEA4Z,EAAQlR,UAAU4T,QAAU,WAC1B,IAAK,IAAI/b,EAAI,EAAGkc,EAAIhF,UAAUzX,OAAQO,EAAIkc,EAAGlc,IAC3C+b,EAAQnV,KAAMsQ,UAAUlX,IAE1B,OAAO4G,KAAKnH,MACd,EAEA4Z,EAAQlR,UAAU7D,IAAM,WACtB,GAAKsC,KAAKuU,KAAV,CAIA,IAAIkC,EAAMzW,KAAKuU,KAAKzc,MAQpB,OAPAkI,KAAKuU,KAAOvU,KAAKuU,KAAKC,KAClBxU,KAAKuU,KACPvU,KAAKuU,KAAKrS,KAAO,KAEjBlC,KAAK3G,KAAO,KAEd2G,KAAKnH,SACE4d,CAVP,CAWF,EAEAhE,EAAQlR,UAAUlC,MAAQ,WACxB,GAAKW,KAAK3G,KAAV,CAIA,IAAIod,EAAMzW,KAAK3G,KAAKvB,MAQpB,OAPAkI,KAAK3G,KAAO2G,KAAK3G,KAAK6I,KAClBlC,KAAK3G,KACP2G,KAAK3G,KAAKmb,KAAO,KAEjBxU,KAAKuU,KAAO,KAEdvU,KAAKnH,SACE4d,CAVP,CAWF,EAEAhE,EAAQlR,UAAU2S,QAAU,SAAUE,EAAIC,GACxCA,EAAQA,GAASrU,KACjB,IAAK,IAAIsU,EAAStU,KAAK3G,KAAMD,EAAI,EAAc,OAAXkb,EAAiBlb,IACnDgb,EAAGpV,KAAKqV,EAAOC,EAAOxc,MAAOsB,EAAG4G,MAChCsU,EAASA,EAAOpS,IAEpB,EAEAuQ,EAAQlR,UAAUmV,eAAiB,SAAUtC,EAAIC,GAC/CA,EAAQA,GAASrU,KACjB,IAAK,IAAIsU,EAAStU,KAAKuU,KAAMnb,EAAI4G,KAAKnH,OAAS,EAAc,OAAXyb,EAAiBlb,IACjEgb,EAAGpV,KAAKqV,EAAOC,EAAOxc,MAAOsB,EAAG4G,MAChCsU,EAASA,EAAOE,IAEpB,EAEA/B,EAAQlR,UAAUmD,IAAM,SAAUkB,GAChC,IAAK,IAAIxM,EAAI,EAAGkb,EAAStU,KAAK3G,KAAiB,OAAXib,GAAmBlb,EAAIwM,EAAGxM,IAE5Dkb,EAASA,EAAOpS,KAElB,GAAI9I,IAAMwM,GAAgB,OAAX0O,EACb,OAAOA,EAAOxc,KAElB,EAEA2a,EAAQlR,UAAUoV,WAAa,SAAU/Q,GACvC,IAAK,IAAIxM,EAAI,EAAGkb,EAAStU,KAAKuU,KAAiB,OAAXD,GAAmBlb,EAAIwM,EAAGxM,IAE5Dkb,EAASA,EAAOE,KAElB,GAAIpb,IAAMwM,GAAgB,OAAX0O,EACb,OAAOA,EAAOxc,KAElB,EAEA2a,EAAQlR,UAAU2D,IAAM,SAAUkP,EAAIC,GACpCA,EAAQA,GAASrU,KAEjB,IADA,IAAIyW,EAAM,IAAIhE,EACL6B,EAAStU,KAAK3G,KAAiB,OAAXib,GAC3BmC,EAAIhd,KAAK2a,EAAGpV,KAAKqV,EAAOC,EAAOxc,MAAOkI,OACtCsU,EAASA,EAAOpS,KAElB,OAAOuU,CACT,EAEAhE,EAAQlR,UAAUqV,WAAa,SAAUxC,EAAIC,GAC3CA,EAAQA,GAASrU,KAEjB,IADA,IAAIyW,EAAM,IAAIhE,EACL6B,EAAStU,KAAKuU,KAAiB,OAAXD,GAC3BmC,EAAIhd,KAAK2a,EAAGpV,KAAKqV,EAAOC,EAAOxc,MAAOkI,OACtCsU,EAASA,EAAOE,KAElB,OAAOiC,CACT,EAEAhE,EAAQlR,UAAUuP,OAAS,SAAUsD,EAAIyC,GACvC,IAAIld,EACA2a,EAAStU,KAAK3G,KAClB,GAAIiX,UAAUzX,OAAS,EACrBc,EAAMkd,MACD,KAAI7W,KAAK3G,KAId,MAAM,IAAIwK,UAAU,8CAHpByQ,EAAStU,KAAK3G,KAAK6I,KACnBvI,EAAMqG,KAAK3G,KAAKvB,KAGlB,CAEA,IAAK,IAAIsB,EAAI,EAAc,OAAXkb,EAAiBlb,IAC/BO,EAAMya,EAAGza,EAAK2a,EAAOxc,MAAOsB,GAC5Bkb,EAASA,EAAOpS,KAGlB,OAAOvI,CACT,EAEA8Y,EAAQlR,UAAUuV,cAAgB,SAAU1C,EAAIyC,GAC9C,IAAIld,EACA2a,EAAStU,KAAKuU,KAClB,GAAIjE,UAAUzX,OAAS,EACrBc,EAAMkd,MACD,KAAI7W,KAAKuU,KAId,MAAM,IAAI1Q,UAAU,8CAHpByQ,EAAStU,KAAKuU,KAAKC,KACnB7a,EAAMqG,KAAKuU,KAAKzc,KAGlB,CAEA,IAAK,IAAIsB,EAAI4G,KAAKnH,OAAS,EAAc,OAAXyb,EAAiBlb,IAC7CO,EAAMya,EAAGza,EAAK2a,EAAOxc,MAAOsB,GAC5Bkb,EAASA,EAAOE,KAGlB,OAAO7a,CACT,EAEA8Y,EAAQlR,UAAUmT,QAAU,WAE1B,IADA,IAAIW,EAAM,IAAI7W,MAAMwB,KAAKnH,QAChBO,EAAI,EAAGkb,EAAStU,KAAK3G,KAAiB,OAAXib,EAAiBlb,IACnDic,EAAIjc,GAAKkb,EAAOxc,MAChBwc,EAASA,EAAOpS,KAElB,OAAOmT,CACT,EAEA5C,EAAQlR,UAAUwV,eAAiB,WAEjC,IADA,IAAI1B,EAAM,IAAI7W,MAAMwB,KAAKnH,QAChBO,EAAI,EAAGkb,EAAStU,KAAKuU,KAAiB,OAAXD,EAAiBlb,IACnDic,EAAIjc,GAAKkb,EAAOxc,MAChBwc,EAASA,EAAOE,KAElB,OAAOa,CACT,EAEA5C,EAAQlR,UAAU/H,MAAQ,SAAUkG,EAAMsL,IACxCA,EAAKA,GAAMhL,KAAKnH,QACP,IACPmS,GAAMhL,KAAKnH,SAEb6G,EAAOA,GAAQ,GACJ,IACTA,GAAQM,KAAKnH,QAEf,IAAI4Q,EAAM,IAAIgJ,EACd,GAAIzH,EAAKtL,GAAQsL,EAAK,EACpB,OAAOvB,EAEL/J,EAAO,IACTA,EAAO,GAELsL,EAAKhL,KAAKnH,SACZmS,EAAKhL,KAAKnH,QAEZ,IAAK,IAAIO,EAAI,EAAGkb,EAAStU,KAAK3G,KAAiB,OAAXib,GAAmBlb,EAAIsG,EAAMtG,IAC/Dkb,EAASA,EAAOpS,KAElB,KAAkB,OAAXoS,GAAmBlb,EAAI4R,EAAI5R,IAAKkb,EAASA,EAAOpS,KACrDuH,EAAIhQ,KAAK6a,EAAOxc,OAElB,OAAO2R,CACT,EAEAgJ,EAAQlR,UAAUyV,aAAe,SAAUtX,EAAMsL,IAC/CA,EAAKA,GAAMhL,KAAKnH,QACP,IACPmS,GAAMhL,KAAKnH,SAEb6G,EAAOA,GAAQ,GACJ,IACTA,GAAQM,KAAKnH,QAEf,IAAI4Q,EAAM,IAAIgJ,EACd,GAAIzH,EAAKtL,GAAQsL,EAAK,EACpB,OAAOvB,EAEL/J,EAAO,IACTA,EAAO,GAELsL,EAAKhL,KAAKnH,SACZmS,EAAKhL,KAAKnH,QAEZ,IAAK,IAAIO,EAAI4G,KAAKnH,OAAQyb,EAAStU,KAAKuU,KAAiB,OAAXD,GAAmBlb,EAAI4R,EAAI5R,IACvEkb,EAASA,EAAOE,KAElB,KAAkB,OAAXF,GAAmBlb,EAAIsG,EAAMtG,IAAKkb,EAASA,EAAOE,KACvD/K,EAAIhQ,KAAK6a,EAAOxc,OAElB,OAAO2R,CACT,EAEAgJ,EAAQlR,UAAU0V,OAAS,SAAUC,EAAOC,GACtCD,EAAQlX,KAAKnH,SACfqe,EAAQlX,KAAKnH,OAAS,GAEpBqe,EAAQ,IACVA,EAAQlX,KAAKnH,OAASqe,GAGxB,IAAK,IAAI9d,EAAI,EAAGkb,EAAStU,KAAK3G,KAAiB,OAAXib,GAAmBlb,EAAI8d,EAAO9d,IAChEkb,EAASA,EAAOpS,KAGlB,IAAIuH,EAAM,GACV,IAASrQ,EAAI,EAAGkb,GAAUlb,EAAI+d,EAAa/d,IACzCqQ,EAAIhQ,KAAK6a,EAAOxc,OAChBwc,EAAStU,KAAK4V,WAAWtB,GAEZ,OAAXA,IACFA,EAAStU,KAAKuU,MAGZD,IAAWtU,KAAK3G,MAAQib,IAAWtU,KAAKuU,OAC1CD,EAASA,EAAOE,MAGlB,IAASpb,EAAI,EAAGA,GAACkX,UAAAzX,QAAA,IAAAyX,UAAAzX,OAAA,GAAiBO,IAChCkb,EAAS8B,EAAOpW,KAAMsU,EAAclb,EAAC,KAAAkX,UAAAzX,QAADO,EAAC,OAAAuH,EAAA2P,UAADlX,EAAC,IAEvC,OAAOqQ,CACT,EAEAgJ,EAAQlR,UAAU6V,QAAU,WAG1B,IAFA,IAAI/d,EAAO2G,KAAK3G,KACZkb,EAAOvU,KAAKuU,KACPD,EAASjb,EAAiB,OAAXib,EAAiBA,EAASA,EAAOE,KAAM,CAC7D,IAAIjL,EAAI+K,EAAOE,KACfF,EAAOE,KAAOF,EAAOpS,KACrBoS,EAAOpS,KAAOqH,CAChB,CAGA,OAFAvJ,KAAK3G,KAAOkb,EACZvU,KAAKuU,KAAOlb,EACL2G,IACT,EA0DA,IAEEpI,EAAQ,MAARA,CAAyB6a,EAC3B,CAAE,MAAO1O,GAAK,C,uBCxad,IAAMwL,EAAU3X,EAAQ,OAExB+M,EAAOpM,QADK,SAAC4K,EAAS0B,EAAOjC,GAAO,OAAK2M,EAAQpM,EAAS0B,EAAO,IAAKjC,EAAQ,C,wBCF9E,IAAMsB,EAAQtM,EAAQ,OAMtB+M,EAAOpM,QALY,SAAC8e,EAAIC,EAAI1U,GAG1B,OAFAyU,EAAK,IAAInT,EAAMmT,EAAIzU,GACnB0U,EAAK,IAAIpT,EAAMoT,EAAI1U,GACZyU,EAAG/O,WAAWgP,EACvB,C,wBCLA,IAAM/H,EAAU3X,EAAQ,OAGxB+M,EAAOpM,QADK,SAAC4K,EAAS0B,EAAOjC,GAAO,OAAK2M,EAAQpM,EAAS0B,EAAO,IAAKjC,EAAQ,C,wBCF9E,IAAMkB,EAASlM,EAAQ,OACjBsM,EAAQtM,EAAQ,OAuBtB+M,EAAOpM,QArBe,SAACgf,EAAU1S,EAAOjC,GACtC,IAAI4F,EAAM,KACNgP,EAAQ,KACRC,EAAW,KACf,IACEA,EAAW,IAAIvT,EAAMW,EAAOjC,EAC9B,CAAE,MAAOmB,GACP,OAAO,IACT,CAWA,OAVAwT,EAASrD,SAAQ,SAAC5F,GACZmJ,EAAStT,KAAKmK,KAEX9F,IAA6B,IAAtBgP,EAAM7J,QAAQW,KAGxBkJ,EAAQ,IAAI1T,EADZ0E,EAAM8F,EACkB1L,IAG9B,IACO4F,CACT,C,wBCvBA,IAAM1E,EAASlM,EAAQ,OACjBsM,EAAQtM,EAAQ,OAsBtB+M,EAAOpM,QArBe,SAACgf,EAAU1S,EAAOjC,GACtC,IAAI8U,EAAM,KACNC,EAAQ,KACRF,EAAW,KACf,IACEA,EAAW,IAAIvT,EAAMW,EAAOjC,EAC9B,CAAE,MAAOmB,GACP,OAAO,IACT,CAWA,OAVAwT,EAASrD,SAAQ,SAAC5F,GACZmJ,EAAStT,KAAKmK,KAEXoJ,GAA4B,IAArBC,EAAMhK,QAAQW,KAGxBqJ,EAAQ,IAAI7T,EADZ4T,EAAMpJ,EACkB1L,IAG9B,IACO8U,CACT,C,wBCtBA,IAAM5T,EAASlM,EAAQ,OACjBsM,EAAQtM,EAAQ,OAChBkV,EAAKlV,EAAQ,OA0DnB+M,EAAOpM,QAxDY,SAACsM,EAAO9B,GACzB8B,EAAQ,IAAIX,EAAMW,EAAO9B,GAEzB,IAAI6U,EAAS,IAAI9T,EAAO,SACxB,GAAIe,EAAMV,KAAKyT,GACb,OAAOA,EAIT,GADAA,EAAS,IAAI9T,EAAO,WAChBe,EAAMV,KAAKyT,GACb,OAAOA,EAGTA,EAAS,KACT,IADa,IAAAC,EAAA,WAEX,IAAMpQ,EAAc5C,EAAME,IAAI3L,GAE1B0e,EAAS,KACbrQ,EAAYyM,SAAQ,SAAC6D,GAEnB,IAAMC,EAAU,IAAIlU,EAAOiU,EAAW/c,OAAOmI,SAC7C,OAAQ4U,EAAW7U,UACjB,IAAK,IAC+B,IAA9B8U,EAAQ1M,WAAWzS,OACrBmf,EAAQtM,QAERsM,EAAQ1M,WAAW7R,KAAK,GAE1Bue,EAAQlT,IAAMkT,EAAQhT,SAExB,IAAK,GACL,IAAK,KACE8S,IAAUhL,EAAGkL,EAASF,KACzBA,EAASE,GAEX,MACF,IAAK,IACL,IAAK,KAEH,MAEF,QACE,MAAM,IAAIrL,MAAM,yBAAD/T,OAA0Bmf,EAAW7U,WAE1D,KACI4U,GAAYF,IAAU9K,EAAG8K,EAAQE,KACnCF,EAASE,EAEb,EAlCS1e,EAAI,EAAGA,EAAIyL,EAAME,IAAIlM,SAAUO,EAACye,IAoCzC,OAAID,GAAU/S,EAAMV,KAAKyT,GAChBA,EAGF,IACT,C,wBC3DA,IAAM9T,EAASlM,EAAQ,OACjB8K,EAAa9K,EAAQ,OACnB4K,EAAQE,EAARF,IACF0B,EAAQtM,EAAQ,OAChBqX,EAAYrX,EAAQ,OACpBkV,EAAKlV,EAAQ,OACboV,EAAKpV,EAAQ,OACbqV,EAAMrV,EAAQ,OACdmV,EAAMnV,EAAQ,OAuEpB+M,EAAOpM,QArES,SAAC4K,EAAS0B,EAAOoT,EAAMrV,GAIrC,IAAIsV,EAAMC,EAAOC,EAAMzV,EAAM0V,EAC7B,OAJAlV,EAAU,IAAIW,EAAOX,EAASP,GAC9BiC,EAAQ,IAAIX,EAAMW,EAAOjC,GAGjBqV,GACN,IAAK,IACHC,EAAOpL,EACPqL,EAAQlL,EACRmL,EAAOpL,EACPrK,EAAO,IACP0V,EAAQ,KACR,MACF,IAAK,IACHH,EAAOlL,EACPmL,EAAQpL,EACRqL,EAAOtL,EACPnK,EAAO,IACP0V,EAAQ,KACR,MACF,QACE,MAAM,IAAIxU,UAAU,yCAIxB,GAAIoL,EAAU9L,EAAS0B,EAAOjC,GAC5B,OAAO,EAMT,IAFA,IAAAiV,EAAA,WAGE,IAAMpQ,EAAc5C,EAAME,IAAI3L,GAE1Bkf,EAAO,KACPC,EAAM,KAiBV,OAfA9Q,EAAYyM,SAAQ,SAAC6D,GACfA,EAAW/c,SAAWwH,IACxBuV,EAAa,IAAIrV,EAAW,YAE9B4V,EAAOA,GAAQP,EACfQ,EAAMA,GAAOR,EACTG,EAAKH,EAAW/c,OAAQsd,EAAKtd,OAAQ4H,GACvC0V,EAAOP,EACEK,EAAKL,EAAW/c,OAAQud,EAAIvd,OAAQ4H,KAC7C2V,EAAMR,EAEV,IAIIO,EAAKpV,WAAaP,GAAQ2V,EAAKpV,WAAamV,EAAO,CAAA/J,GAC9C,GAKHiK,EAAIrV,UAAYqV,EAAIrV,WAAaP,IACnCwV,EAAMhV,EAASoV,EAAIvd,QAEZud,EAAIrV,WAAamV,GAASD,EAAKjV,EAASoV,EAAIvd,QAAS,CAAAsT,GACvD,QADF,EAFyB,CAAAA,GACvB,EAIX,EAjCSlV,EAAI,EAAGA,EAAIyL,EAAME,IAAIlM,SAAUO,EAAG,CAAF,IAAAof,EAAAX,IAAA,qBAAAW,EAAA,OAAAA,EAAAlK,CAAA,CAkCzC,OAAO,CACT,C,kEC1EMW,EAAYrX,EAAQ,OACpB+V,EAAU/V,EAAQ,OACxB+M,EAAOpM,QAAU,SAACgf,EAAU1S,EAAOjC,GACjC,IAIuB4C,EAJjBT,EAAM,GACRO,EAAQ,KACRkP,EAAO,KACLlG,EAAIiJ,EAASlJ,MAAK,SAAC/B,EAAGvU,GAAC,OAAK4V,EAAQrB,EAAGvU,EAAG6K,EAAQ,IAAC6C,EAAAC,EACnC4I,GAAC,IAAvB,IAAA7I,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAyB,KAAd1C,EAAOqC,EAAA1N,MACCmX,EAAU9L,EAAS0B,EAAOjC,IAEzC4R,EAAOrR,EACFmC,IACHA,EAAQnC,KAGNqR,GACFzP,EAAItL,KAAK,CAAC6L,EAAOkP,IAEnBA,EAAO,KACPlP,EAAQ,KAEZ,CAAC,OAAAS,GAAAN,EAAAvI,EAAA6I,EAAA,SAAAN,EAAAO,GAAA,CACGV,GACFP,EAAItL,KAAK,CAAC6L,EAAO,OAInB,IADA,IAAMmT,EAAS,GACfC,EAAA,EAAAC,EAAyB5T,EAAG2T,EAAAC,EAAA9f,OAAA6f,IAAE,CAAzB,IAAAE,EAAAC,EAAAF,EAAAD,GAAA,GAAOhB,EAAGkB,EAAA,GAAEpQ,EAAGoQ,EAAA,GACdlB,IAAQlP,EACViQ,EAAOhf,KAAKie,GACFlP,GAAOkP,IAAQpJ,EAAE,GAEjB9F,EAEDkP,IAAQpJ,EAAE,GACnBmK,EAAOhf,KAAK,KAADb,OAAM4P,IAEjBiQ,EAAOhf,KAAK,GAADb,OAAI8e,EAAG,OAAA9e,OAAM4P,IAJxBiQ,EAAOhf,KAAK,KAADb,OAAM8e,IAFjBe,EAAOhf,KAAK,IAQhB,CACA,IAAMqf,EAAaL,EAAOvS,KAAK,QACzB6S,EAAgC,kBAAdlU,EAAMC,IAAmBD,EAAMC,IAAM/H,OAAO8H,GACpE,OAAOiU,EAAWjgB,OAASkgB,EAASlgB,OAASigB,EAAajU,CAC5D,C,+CC9CMX,EAAQtM,EAAQ,OAChB8K,EAAa9K,EAAQ,OACnB4K,EAAQE,EAARF,IACFyM,EAAYrX,EAAQ,OACpB+V,EAAU/V,EAAQ,OAkElBohB,EAAe,SAACC,EAAKC,EAAKtW,GAC9B,GAAIqW,IAAQC,EACV,OAAO,EAGT,GAAmB,IAAfD,EAAIpgB,QAAgBogB,EAAI,GAAGje,SAAWwH,EAAK,CAC7C,GAAmB,IAAf0W,EAAIrgB,QAAgBqgB,EAAI,GAAGle,SAAWwH,EACxC,OAAO,EAEPyW,EADSrW,EAAQqB,kBACX,CAAC,IAAIvB,EAAW,cAEhB,CAAC,IAAIA,EAAW,WAE1B,CAEA,GAAmB,IAAfwW,EAAIrgB,QAAgBqgB,EAAI,GAAGle,SAAWwH,EAAK,CAC7C,GAAII,EAAQqB,kBACV,OAAO,EAEPiV,EAAM,CAAC,IAAIxW,EAAW,WAE1B,CAEA,IACIoK,EAAIE,EACWmM,EAcfC,EAhBEC,EAAQ,IAAIC,IACRC,EAAA7T,EACMuT,GAAG,IAAnB,IAAAM,EAAA5T,MAAAwT,EAAAI,EAAA3T,KAAAC,MAAqB,KAAVR,EAAC8T,EAAArhB,MACS,MAAfuN,EAAEnC,UAAmC,OAAfmC,EAAEnC,SAC1B4J,EAAK0M,EAAS1M,EAAIzH,EAAGzC,GACG,MAAfyC,EAAEnC,UAAmC,OAAfmC,EAAEnC,SACjC8J,EAAKyM,EAAQzM,EAAI3H,EAAGzC,GAEpByW,EAAMK,IAAIrU,EAAErK,OAEhB,CAAC,OAAA+K,GAAAwT,EAAArc,EAAA6I,EAAA,SAAAwT,EAAAvT,GAAA,CAED,GAAIqT,EAAM1R,KAAO,EACf,OAAO,KAIT,GAAImF,GAAME,EAAI,CAEZ,IADAoM,EAAWzL,EAAQb,EAAG9R,OAAQgS,EAAGhS,OAAQ4H,IAC1B,EACb,OAAO,KACF,GAAiB,IAAbwW,IAAmC,OAAhBtM,EAAG5J,UAAqC,OAAhB8J,EAAG9J,UACvD,OAAO,IAEX,CAEA,IACsByW,EAkBlBC,EAAQC,EACRC,EAAUC,EApBdC,EAAAtU,EACiB2T,GAAK,IAAtB,IAAAW,EAAArU,MAAAgU,EAAAK,EAAApU,KAAAC,MAAwB,KAAb+G,EAAE+M,EAAA7hB,MACX,GAAIgV,IAAOmC,EAAUrC,EAAI7P,OAAO+P,GAAKlK,GACnC,OAAO,KAGT,GAAIoK,IAAOiC,EAAUrC,EAAI7P,OAAOiQ,GAAKpK,GACnC,OAAO,KACR,IAEkBqX,EAFlBC,EAAAxU,EAEewT,GAAG,IAAnB,IAAAgB,EAAAvU,MAAAsU,EAAAC,EAAAtU,KAAAC,MAAqB,KAAVR,EAAC4U,EAAAniB,MACV,IAAKmX,EAAUrC,EAAI7P,OAAOsI,GAAIzC,GAC5B,OAAO,CAEX,CAAC,OAAAmD,GAAAmU,EAAAhd,EAAA6I,EAAA,SAAAmU,EAAAlU,GAAA,CAED,OAAO,CACT,CAAC,OAAAD,GAAAiU,EAAA9c,EAAA6I,EAAA,SAAAiU,EAAAhU,GAAA,CAMD,IAAImU,KAAenN,GAChBpK,EAAQqB,oBACT+I,EAAGhS,OAAOsQ,WAAWzS,SAASmU,EAAGhS,OAC/Bof,KAAetN,GAChBlK,EAAQqB,oBACT6I,EAAG9R,OAAOsQ,WAAWzS,SAASiU,EAAG9R,OAE/Bmf,GAAmD,IAAnCA,EAAa7O,WAAWzS,QACxB,MAAhBmU,EAAG9J,UAAmD,IAA/BiX,EAAa7O,WAAW,KACjD6O,GAAe,GAChB,IAEkBE,EAFlBC,EAAA5U,EAEewT,GAAG,IAAnB,IAAAoB,EAAA3U,MAAA0U,EAAAC,EAAA1U,KAAAC,MAAqB,KAAVR,EAACgV,EAAAviB,MAGV,GAFAiiB,EAAWA,GAA2B,MAAf1U,EAAEnC,UAAmC,OAAfmC,EAAEnC,SAC/C4W,EAAWA,GAA2B,MAAfzU,EAAEnC,UAAmC,OAAfmC,EAAEnC,SAC3C4J,EASF,GARIsN,GACE/U,EAAErK,OAAOsQ,YAAcjG,EAAErK,OAAOsQ,WAAWzS,QAC3CwM,EAAErK,OAAOwQ,QAAU4O,EAAa5O,OAChCnG,EAAErK,OAAOyQ,QAAU2O,EAAa3O,OAChCpG,EAAErK,OAAO0Q,QAAU0O,EAAa1O,QAClC0O,GAAe,GAGA,MAAf/U,EAAEnC,UAAmC,OAAfmC,EAAEnC,UAE1B,IADA0W,EAASJ,EAAS1M,EAAIzH,EAAGzC,MACVyC,GAAKuU,IAAW9M,EAC7B,OAAO,OAEJ,GAAoB,OAAhBA,EAAG5J,WAAsB+L,EAAUnC,EAAG9R,OAAQ+B,OAAOsI,GAAIzC,GAClE,OAAO,EAGX,GAAIoK,EASF,GARImN,GACE9U,EAAErK,OAAOsQ,YAAcjG,EAAErK,OAAOsQ,WAAWzS,QAC3CwM,EAAErK,OAAOwQ,QAAU2O,EAAa3O,OAChCnG,EAAErK,OAAOyQ,QAAU0O,EAAa1O,OAChCpG,EAAErK,OAAO0Q,QAAUyO,EAAazO,QAClCyO,GAAe,GAGA,MAAf9U,EAAEnC,UAAmC,OAAfmC,EAAEnC,UAE1B,IADA2W,EAAQJ,EAAQzM,EAAI3H,EAAGzC,MACTyC,GAAKwU,IAAU7M,EAC3B,OAAO,OAEJ,GAAoB,OAAhBA,EAAG9J,WAAsB+L,EAAUjC,EAAGhS,OAAQ+B,OAAOsI,GAAIzC,GAClE,OAAO,EAGX,IAAKyC,EAAEnC,WAAa8J,GAAMF,IAAoB,IAAbsM,EAC/B,OAAO,CAEX,CAIA,OAAArT,GAAAuU,EAAApd,EAAA6I,EAAA,SAAAuU,EAAAtU,GAAA,CACA,QAAI8G,GAAMgN,IAAa9M,GAAmB,IAAboM,OAIzBpM,GAAM+M,IAAajN,GAAmB,IAAbsM,MAOzBgB,IAAgBD,GAKtB,EAGMX,EAAW,SAAClN,EAAGvU,EAAG6K,GACtB,IAAK0J,EACH,OAAOvU,EAET,IAAM4K,EAAOgL,EAAQrB,EAAEtR,OAAQjD,EAAEiD,OAAQ4H,GACzC,OAAOD,EAAO,EAAI2J,EACd3J,EAAO,GACQ,MAAf5K,EAAEmL,UAAmC,OAAfoJ,EAAEpJ,SADbnL,EAEXuU,CACN,EAGMmN,EAAU,SAACnN,EAAGvU,EAAG6K,GACrB,IAAK0J,EACH,OAAOvU,EAET,IAAM4K,EAAOgL,EAAQrB,EAAEtR,OAAQjD,EAAEiD,OAAQ4H,GACzC,OAAOD,EAAO,EAAI2J,EACd3J,EAAO,GACQ,MAAf5K,EAAEmL,UAAmC,OAAfoJ,EAAEpJ,SADbnL,EAEXuU,CACN,EAEA3H,EAAOpM,QAzMQ,SAAC0gB,EAAKC,GAAsB,IAAjBtW,EAAO0N,UAAAzX,OAAA,QAAA8H,IAAA2P,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnC,GAAI2I,IAAQC,EACV,OAAO,EAGTD,EAAM,IAAI/U,EAAM+U,EAAKrW,GACrBsW,EAAM,IAAIhV,EAAMgV,EAAKtW,GACrB,IAEsC4C,EAFlC+U,GAAa,EAAK9U,EAAAC,EAESuT,EAAIlU,KAAG,IAAtCyV,EAAO,IAAA/U,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAiC,KACPyB,EADfmT,EAASjV,EAAA1N,MAAA4P,EAAAhC,EACDwT,EAAInU,KAAG,IAA/B,IAAA2C,EAAA/B,MAAA2B,EAAAI,EAAA9B,KAAAC,MAAiC,KAAtB6U,EAASpT,EAAAxP,MACZ6iB,EAAQ3B,EAAayB,EAAWC,EAAW9X,GAEjD,GADA2X,EAAaA,GAAwB,OAAVI,EACvBA,EACF,SAASH,CAEb,CAIA,OAAAzU,GAAA2B,EAAAxK,EAAA6I,EAAA,SAAA2B,EAAA1B,GAAA,CACA,GAAIuU,EACF,OAAO,CAEX,CAAC,OAAAxU,GAAAN,EAAAvI,EAAA6I,EAAA,SAAAN,EAAAO,GAAA,CACD,OAAO,CACT,C,wBCpEA,IAAM9B,EAAQtM,EAAQ,OAOtB+M,EAAOpM,QAJe,SAACsM,EAAOjC,GAAO,OACnC,IAAIsB,EAAMW,EAAOjC,GAASmC,IACvBG,KAAI,SAAAvC,GAAI,OAAIA,EAAKuC,KAAI,SAAAG,GAAC,OAAIA,EAAEvN,KAAK,IAAEoO,KAAK,KAAKd,OAAOH,MAAM,IAAI,GAAC,C,wBCLpE,IAAMf,EAAQtM,EAAQ,OAUtB+M,EAAOpM,QATY,SAACsM,EAAOjC,GACzB,IAGE,OAAO,IAAIsB,EAAMW,EAAOjC,GAASiC,OAAS,GAC5C,CAAE,MAAOd,GACP,OAAO,IACT,CACF,C","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/valid.js","../node_modules/semver/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/semver/node_modules/lru-cache/index.js","../node_modules/semver/node_modules/yallist/iterator.js","../node_modules/semver/node_modules/yallist/yallist.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/valid.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n"],"names":["errors_1","require","asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","_a","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","DeviceModelId","devices","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","semver","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","Object","values","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","replace","__assign","subscribers","log","type","message","obj","String","date","Date","e","console","error","dispatch","window","__ledgerLogsListen","cb","indexOf","pop","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","sent","Array","isArray","getLedgerDevices","getDevices","filter","TransportWebHID","_super","_this","call","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","from","_disconnectEmitted","_emitDisconnect","emit","exchange","__awaiter","this","exchangeAtomicImpl","toString","framing","hidFraming","sendReport","_b","result","includes","DisconnectedDeviceDuringOperation","productId","undefined","addEventListener","__extends","request","__read","apply","open","openConnected","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","list","listen","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","next","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","ANY","Symbol","Comparator","comp","options","_classCallCheck","parseOptions","loose","debug","parse","operator","version","_createClass","key","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","SemVer","er","cmp","includePrerelease","Range","test","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","get","module","_require","range","raw","set","format","split","map","parseRange","trim","c","first","isNullSet","_step","_iterator","_createForOfIteratorHelper","s","n","done","isAny","err","f","comps","join","_this2","memoOpts","keys","memoKey","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","_step2","rangeMap","Map","comparators","_iterator2","size","has","delete","_toConsumableArray","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","max","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","_require2","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","a","release","identifier","inc","isNaN","Error","eq","neq","gt","gte","lt","lte","op","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compare","compareBuild","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","sort","v","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","_console","_len","arguments","args","_key","numeric","anum","bnum","opts","k","reduce","o","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lC","forEach","hit","fn","thisp","walker","tail","prev","forEachStep","toArray","_this3","isStale","now","h","len","del","item","Entry","unshift","node","arr","l","expiresAt","_this4","self","doUse","unshiftNode","removeNode","_regeneratorRuntime","iterator","mark","_callee","wrap","_context","stop","insert","inserted","Node","create","pushNode","res","forEachReverse","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","_loop","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","_ret","ranges","_i","_set","_set$_i","_slicedToArray","simplified","original","simpleSubset","sub","dom","_step3","gtltComp","eqSet","Set","_iterator3","higherGT","lowerLT","add","_step4","higher","lower","hasDomLT","hasDomGT","_iterator4","_step6","_iterator6","needDomLTPre","needDomGTPre","_step5","_iterator5","sawNonNull","OUTER","simpleSub","simpleDom","isSub"],"sourceRoot":""}